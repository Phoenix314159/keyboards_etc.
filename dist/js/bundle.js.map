{"version":3,"sources":["app.js","bundle.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","directives/angular-parallax.js","directives/backGround.js","directives/buttonD.js","directives/countDown.js","directives/countDown2.js","directives/navBar.js","directives/shipping.js","services/mainService.js","services/modelFactory.js"],"names":["angular","stripeProvider","setPublishableKey","$stateProvider","state","template","component","url","templateUrl","$urlRouterProvider","otherwise","vm","this","product3","subscribe","alert","name","mainService","getCustomerInfo","then","response","customer","data","getProductById2","response1","response2","response3","product16","push","product5","product29","addToCart","productId","id","require","controller","$timeout","$state","login","username","password","deleteAllFromCart","firstname","check","$onInit","main","checkLogin","show","goHome","number","go","controllerAs","user","logged","logout","parent","stripe","$http","modelFactory","payment","amount","getTotal","showP","charge","card","createToken","console","log","last4","copy","token","Number","post","catch","err","type","test","message","getProducts","products","product1","$stateParams","getProductById","product","getProductsByType","showCart","showBox2","show2","showBox","message1","message2","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","updateQuantity","cart","cart1","pId","displayTotal","deleteFromCart","addNewUser","signUp","lastname","email","count","restrict","parallaxRatio","parallaxVerticalOffset","parallaxHorizontalOffset","link","$scope","elem","attrs","setPosition","calcValY","$window","pageYOffset","innerHeight","topVal","hozVal","indexOf","css","element","bind","directive","transclude","scope","prop","e","$apply","background-image","backgrounds","$interval","forEach","img","Image","src","bg_string","background-attachment","background-repeat","background-position","background-blend-mode","background-size","opacity","transition","-webkit-backface-visibility","height","width","on","html","method","customerId","t","shift"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\nangular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax'])\r\n    .config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\r\n        stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productsdetails/:id',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                template: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","'use strict';\n\nangular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax']).config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\n    stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productsdetails/:id',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        template: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.product3 = [];\n\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n        mainService.getProductById2(16).then(function (response1) {\n            //get an array of the 3 specific products on the home page to display\n            mainService.getProductById2(5).then(function (response2) {\n                mainService.getProductById2(29).then(function (response3) {\n                    vm.product16 = response1.data[0];\n                    vm.product3.push(vm.product16);\n                    vm.product5 = response2.data[0];\n                    vm.product3.push(vm.product5);\n                    vm.product29 = response3.data[0];\n                    vm.product3.push(vm.product29);\n                });\n            });\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n\n        vm.login = function () {\n            mainService.login(vm.username, vm.password).then(function (response) {\n                //login user\n                mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                });\n                mainService.getCustomerInfo().then(function (response) {\n                    //get customers first name\n                    vm.name = response.data.firstname;\n                    vm.check();\n                });\n            });\n        };\n        vm.$onInit = function () {\n            vm.check = function () {\n                vm.main.checkLogin();\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n        var vm = this;\n        vm.checkLogin = function () {\n            mainService.checkLogin().then(function (response) {\n                if (response.data.user) {\n                    vm.user = true;\n                }\n            });\n        };\n        vm.checkLogin();\n        vm.logged = function () {\n            if (vm.user) {\n                return true;\n            }\n        };\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                vm.user = false;\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n    require: {\n        parent: '^mainComp'\n    },\n    templateUrl: './views/payment.html',\n\n    controller: function controller(stripe, $http, mainService, modelFactory, $state, $timeout) {\n        var vm = this;\n        vm.payment = {};\n        vm.amount = modelFactory.getTotal();\n        vm.showP = true;\n        vm.show = function () {\n            vm.showP = false;\n        };\n        vm.charge = function () {\n            mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n            });\n\n            return stripe.card.createToken(vm.payment.card).then(function (response) {\n                console.log('token created for card ending in ', response.card.last4);\n                var payment = angular.copy(vm.payment);\n                payment.card = void 0;\n                payment.token = response.id;\n                payment.amount = Number(vm.amount * 100);\n                return $http.post('http://www.keyboardsetc.net/api/payments', payment); //post payment to server\n            }).then(function (payment) {\n                console.log('successfully submitted payment for $', payment.amount);\n            }).catch(function (err) {\n                if (err.type && /^Stripe/.test(err.type)) {\n                    console.log('Stripe error: ', err.message);\n                } else {\n                    console.log('Other error occurred, possibly with your API', err.message);\n                }\n            });\n        };\n\n        vm.goHome = function () {\n            $timeout(function () {\n                $timeout(function () {\n                    $timeout(function () {\n                        $timeout(function () {\n                            $timeout(function () {\n                                $timeout(function () {\n                                    $timeout(function () {\n                                        $timeout(function () {\n                                            $timeout(function () {\n                                                $timeout(function () {\n                                                    $state.go('home');\n                                                }, 1000);\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n                vm.product1 = $stateParams.id;\n            });\n        };\n        vm.getProducts();\n\n        mainService.getProductById().then(function (response) {\n            vm.product = response.data[0];\n        });\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.getProductsByType = function () {\n            mainService.getProductsByType($stateParams.type).then(function (response) {\n                vm.products = response.data;\n            });\n        };\n        vm.getProductsByType();\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n    require: {\n        main: '^mainComp'\n    },\n\n    controller: function controller(mainService, modelFactory) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        vm.showBox2 = true;\n        vm.show2 = false;\n        vm.$onInit = function () {\n            vm.show = vm.main.logged();\n            if (vm.show) {\n                vm.showBox = true;\n                vm.show2 = true;\n            } else {\n                vm.showBox = false;\n            }\n        };\n        vm.message1 = 'You have no items in your cart';\n        vm.message2 = 'Please log in to add items to your cart';\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.show2 = false;\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n\n                    mainService.getCart(vm.customer.id).then(function (response) {\n\n                        vm.cart = response.data;\n                        vm.cart1 = vm.cart[0].cartid;\n                        if (vm.cart.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                            vm.pId = false;\n                            if (vm.quantityTotal === 0) {\n                                vm.pId = true;\n                                if (vm.cart.length === 0) {\n                                    vm.showCart = false;\n                                    vm.show2 === true;\n                                }\n                            }\n                        }\n                    });\n                });\n            };\n            vm.displayTotal = function () {\n                modelFactory.displayTotal(vm.gTotal);\n            };\n            vm.deleteFromCart = function (cartid) {\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else if (response.data.length === 0) {\n                            vm.showCart = false;\n                            vm.show2 = true;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('angular-parallax', []).directive('parallax', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@',\n      parallaxHorizontalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        if (!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1);\n        if (calcValY <= $window.innerHeight) {\n          var topVal = calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY;\n          var hozVal = $scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset;\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\n        }\n      };\n\n      setPosition();\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]).directive('parallaxBackground', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    transclude: true,\n    template: '<div ng-transclude></div>',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\n        // horizontal positioning\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\n      };\n\n      // set our initial position - fixes webkit background render bug\n      angular.element($window).bind('load', function (e) {\n        setPosition();\n        $scope.$apply();\n      });\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]);\n'use strict';\n\nangular.module('ecom').directive('backGround', function ($timeout, $interval) {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.css({ 'background-image': 'https://previews.123rf.com/images/tzido/tzido1508/tzido150800637/43812432-music-studio-Stock-Photo-recording.jpg' });\n\n            var backgrounds = ['http://goldwallpapers.com/uploads/posts/music-studio-backgrounds/music_studio_backgrounds_020.jpg', 'https://s-media-cache-ak0.pinimg.com/originals/ec/05/cb/ec05cbb0226b7637330c4850b6f171a5.jpg', 'http://breweryrecording.com/img/gallery/control-1.jpg', 'https://s-media-cache-ak0.pinimg.com/originals/04/dc/27/04dc275cfd874e45ee542bafff3f73e7.jpg', 'http://www.blackbird-music-studio.de/wp-content/uploads/2015/02/Blackbird-Music-Studio_Pre-Production-Suite_web.jpg', 'https://s-media-cache-ak0.pinimg.com/originals/c1/87/28/c187284a8ab128e30bc61c8ef4882b1c.jpg', 'https://s-media-cache-ak0.pinimg.com/originals/00/f2/38/00f2388ba69f258604b6058d9f5a46b7.jpg', 'https://www.workinentertainment.com/blog/wp-content/uploads/2016/03/home-music-studio.jpg', 'https://i.ytimg.com/vi/1rKJSN5dSYI/maxresdefault.jpg'];\n\n            var i = -1;\n\n            $interval(function () {\n                backgrounds.forEach(function (img) {\n                    new Image().src = img;\n                });\n                i++;\n                if (i === backgrounds.length) {\n                    i = 0;\n                }\n                var bg_string = \"url(\" + backgrounds[i] + \")\";\n\n                elem.css({\n                    'background-image': bg_string,\n                    'background-attachment': 'fixed',\n                    'background-repeat': 'no-repeat',\n                    'background-position': 'center',\n                    'background-blend-mode': 'darken',\n                    'background-size': 'cover',\n                    'opacity': '.90',\n                    'transition': '1.7s',\n                    '-webkit-backface-visibility': 'hidden',\n                    'height': '100%',\n                    'width': '100%'\n                });\n            }, 10000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown2', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 10;\n            $timeout(function () {\n                scope.number = 9;\n                $timeout(function () {\n                    scope.number = 8;\n                    $timeout(function () {\n                        scope.number = 7;\n                        $timeout(function () {\n                            scope.number = 6;\n                            $timeout(function () {\n                                scope.number = 5;\n                                $timeout(function () {\n                                    scope.number = 4;\n                                    $timeout(function () {\n                                        scope.number = 3;\n                                        $timeout(function () {\n                                            scope.number = 2;\n                                            $timeout(function () {\n                                                scope.number = 1;\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n// angular.module('ecom').directive('fade', function () {\n//     return {\n//         restrict: 'A',\n//         link: function (scope, elem, attr) {\n//             elem.mouseleave(() => {\n//                 elem.css({\n//                     'transition': '.750s',\n//                     'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\n//                     'opacity':'0'\n//                 });\n//             })\n//             elem.mouseenter(() => {\n//                 elem.css({\n//                     'transition': '.750s',\n//                     'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\n//                     'opacity': '1'\n//                 })\n//             })\n//         }\n//     }\n// });\n\"use strict\";\n'use strict';\n\nangular.module('ecom').directive('navBar', function () {\n      return {\n            restrict: 'E',\n            template: '<div id=\"navbarNav1\">\\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"products({type:\\'allproducts\\'})\">&nbsp;All\\n                                                                                                 Products</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\\n                              </li>\\n                        </ul>\\n                        <form class=\"form-inline waves-effect waves-light\">\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\\n                        </form>\\n                  </div>'\n      };\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n\n    var vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/products'\n        });\n    };\n    vm.getProductsByType = function (type) {\n        return $http({\n            method: 'GET',\n            url: '/api/products/' + type\n        });\n    };\n    vm.getProductById = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/product/' + $stateParams.id\n        });\n    };\n    vm.getProductById2 = function (id) {\n        return $http({\n            method: 'GET',\n            url: '/api/product/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: '/api/updatequantity'\n        });\n    };\n    vm.login = function (username, password) {\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/logout'\n        });\n    };\n    vm.checkLogin = function () {\n        return $http({\n            method: 'GET',\n            url: '/api/checklogin'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function () {\n    var total = [],\n        displayTotal = function displayTotal(t) {\n        total.push(t);\n    },\n        getTotal = function getTotal() {\n        while (total.length > 1) {\n            total.shift();\n        }\n        return total[0];\n    };\n    return {\n        displayTotal: displayTotal,\n        getTotal: getTotal\n    };\n});","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.product3 = [];\r\n\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n         mainService.getCustomerInfo() .then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n        mainService.getProductById2(16).then(response1 => { //get an array of the 3 specific products on the home page to display\r\n            mainService.getProductById2(5).then(response2 => {\r\n                mainService.getProductById2(29).then(response3 => {\r\n                    vm.product16 = response1.data[0];\r\n                    vm.product3.push(vm.product16);\r\n                    vm.product5 = response2.data[0];\r\n                    vm.product3.push(vm.product5);\r\n                    vm.product29 = response3.data[0];\r\n                    vm.product3.push(vm.product29);\r\n                })\r\n            })\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n\r\n        vm.login = () => {\r\n            mainService.login(vm.username, vm.password).then(response => {  //login user\r\n                mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                })\r\n                mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                    vm.name = response.data.firstname;\r\n                    vm.check();\r\n                })\r\n            })\r\n        }\r\n        vm.$onInit = () => {\r\n            vm.check = () => {\r\n                vm.main.checkLogin()\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n        let vm = this;\r\n        vm.checkLogin = () => {\r\n            mainService.checkLogin().then(response => {\r\n                if (response.data.user) {\r\n                    vm.user = true;\r\n                }\r\n            })\r\n        }\r\n        vm.checkLogin();\r\n        vm.logged = () => {\r\n            if (vm.user) {\r\n                return true;\r\n            }\r\n        }\r\n        vm.logout = () => {\r\n            mainService.logout().then(response => {\r\n                vm.data = response.data;\r\n                vm.user = false;\r\n                $state.go('home');\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n    require: {\r\n        parent: '^mainComp'\r\n    },\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function (stripe, $http, mainService, modelFactory, $state, $timeout) {\r\n        let vm = this;\r\n        vm.payment = {};\r\n        vm.amount = modelFactory.getTotal();\r\n        vm.showP = true;\r\n        vm.show = () => {\r\n            vm.showP = false;\r\n        }\r\n        vm.charge = () => {\r\n            mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n            })\r\n\r\n            return stripe.card.createToken(vm.payment.card).then(response => {\r\n                console.log('token created for card ending in ', response.card.last4);\r\n                let payment = angular.copy(vm.payment);\r\n                payment.card = void 0;\r\n                payment.token = response.id;\r\n                payment.amount = Number(vm.amount * 100);\r\n                return $http.post('http://www.keyboardsetc.net/api/payments', payment);  //post payment to server\r\n            }).then(function (payment) {\r\n                console.log('successfully submitted payment for $', payment.amount);\r\n            })\r\n                .catch(function (err) {\r\n                    if (err.type && /^Stripe/.test(err.type)) {\r\n                        console.log('Stripe error: ', err.message);\r\n                    }\r\n                    else {\r\n                        console.log('Other error occurred, possibly with your API', err.message);\r\n                    }\r\n                });\r\n        };\r\n\r\n        vm.goHome = () => {\r\n            $timeout(() => {\r\n                $timeout(() => {\r\n                    $timeout(() => {\r\n                        $timeout(() => {\r\n                            $timeout(() => {\r\n                                $timeout(() => {\r\n                                    $timeout(() => {\r\n                                        $timeout(() => {\r\n                                            $timeout(() => {\r\n                                                $timeout(() => {\r\n                                                    $state.go('home');\r\n                                                }, 1000)\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n})\r\n\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n                vm.product1 = $stateParams.id;\r\n            })\r\n        }\r\n         vm.getProducts();\r\n\r\n        mainService.getProductById().then(response => {\r\n            vm.product = response.data[0];\r\n        })\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.getProductsByType = () => {\r\n            mainService.getProductsByType($stateParams.type).then(response => {\r\n                vm.products = response.data;\r\n            })\r\n        };\r\n        vm.getProductsByType();\r\n\r\n        vm.addToCart = productId => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n\r\n    controller: function (mainService, modelFactory) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        vm.showBox2 = true;\r\n        vm.show2 = false;\r\n        vm.$onInit = () => {\r\n            vm.show = vm.main.logged();\r\n            if (vm.show) {\r\n                vm.showBox = true;\r\n                vm.show2 = true;\r\n            } else {\r\n                vm.showBox = false;\r\n            }\r\n        }\r\n        vm.message1 = 'You have no items in your cart';\r\n        vm.message2 = 'Please log in to add items to your cart';\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;  //show cart if not empty\r\n                    vm.show2 = false;\r\n                    vm.products = response.data.map(v => { //add total property on each object in products array\r\n                        v.total = v.price * v.quantity     // to get correct quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                }\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n\r\n                        vm.cart = response.data;\r\n                        vm.cart1 = vm.cart[0].cartid;\r\n                        if (vm.cart.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                            vm.pId = false;\r\n                            if (vm.quantityTotal === 0) {\r\n                                vm.pId = true;\r\n                                if(vm.cart.length === 0){\r\n                                    vm.showCart = false;\r\n                                    vm.show2 === true;\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.displayTotal = () => {\r\n                modelFactory.displayTotal(vm.gTotal);\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else if (response.data.length === 0) {\r\n                            vm.showCart = false\r\n                            vm.show2 = true;\r\n                        }\r\n                        else {\r\n                            vm.showCart = false\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n        $timeout(function () {\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    vm.count = 1;\r\n                }, 1000)\r\n                vm.count = 2;\r\n            }, 2000)\r\n            $state.go('home');\r\n        }, 3000)\r\n    }\r\n})\r\n","'use strict';\r\n\r\nangular.module('angular-parallax', [\r\n]).directive('parallax', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n      parallaxHorizontalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        if(!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\r\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1 );\r\n        if (calcValY <= $window.innerHeight) {\r\n          var topVal = (calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY);\r\n          var hozVal = ($scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset);\r\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\r\n        }\r\n      };\r\n\r\n      setPosition();\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]).directive('parallaxBackground', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    transclude: true,\r\n    template: '<div ng-transclude></div>',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\r\n        // horizontal positioning\r\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\r\n      };\r\n\r\n      // set our initial position - fixes webkit background render bug\r\n      angular.element($window).bind('load', function(e) {\r\n        setPosition();\r\n        $scope.$apply();\r\n      });\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]);\r\n","angular.module('ecom').directive('backGround', function ($timeout, $interval) {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, elem, attr) => {\r\n            elem.css({'background-image': 'https://previews.123rf.com/images/tzido/tzido1508/tzido150800637/43812432-music-studio-Stock-Photo-recording.jpg'});\r\n\r\n            let backgrounds = [\r\n                    'http://goldwallpapers.com/uploads/posts/music-studio-backgrounds/music_studio_backgrounds_020.jpg',\r\n                    'https://s-media-cache-ak0.pinimg.com/originals/ec/05/cb/ec05cbb0226b7637330c4850b6f171a5.jpg',\r\n                    'http://breweryrecording.com/img/gallery/control-1.jpg',\r\n                    'https://s-media-cache-ak0.pinimg.com/originals/04/dc/27/04dc275cfd874e45ee542bafff3f73e7.jpg',\r\n                    'http://www.blackbird-music-studio.de/wp-content/uploads/2015/02/Blackbird-Music-Studio_Pre-Production-Suite_web.jpg',\r\n                    'https://s-media-cache-ak0.pinimg.com/originals/c1/87/28/c187284a8ab128e30bc61c8ef4882b1c.jpg',\r\n                    'https://s-media-cache-ak0.pinimg.com/originals/00/f2/38/00f2388ba69f258604b6058d9f5a46b7.jpg',\r\n                    'https://www.workinentertainment.com/blog/wp-content/uploads/2016/03/home-music-studio.jpg',\r\n                    'https://i.ytimg.com/vi/1rKJSN5dSYI/maxresdefault.jpg'\r\n                ];\r\n\r\n            let i = -1;\r\n\r\n            $interval(() => {\r\n                backgrounds.forEach(img => {\r\n                    new Image().src = img;\r\n                });\r\n                i++;\r\n                if (i === backgrounds.length) {\r\n                    i = 0;\r\n                }\r\n                let bg_string = \"url(\" + backgrounds[i] + \")\";\r\n\r\n                elem.css({\r\n                    'background-image': bg_string,\r\n                    'background-attachment': 'fixed',\r\n                    'background-repeat': 'no-repeat',\r\n                    'background-position': 'center',\r\n                    'background-blend-mode': 'darken',\r\n                    'background-size': 'cover',\r\n                    'opacity': '.90',\r\n                    'transition': '1.7s',\r\n                    '-webkit-backface-visibility': 'hidden',\r\n                    'height': '100%',\r\n                    'width': '100%'\r\n                });\r\n            }, 10000)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('countDown2', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 10;\r\n            $timeout(() => {\r\n                scope.number = 9;\r\n                $timeout(() => {\r\n                    scope.number = 8;\r\n                    $timeout(() => {\r\n                        scope.number = 7;\r\n                        $timeout(() => {\r\n                            scope.number = 6;\r\n                            $timeout(() => {\r\n                                scope.number = 5;\r\n                                $timeout(() => {\r\n                                    scope.number = 4;\r\n                                    $timeout(() => {\r\n                                        scope.number = 3;\r\n                                        $timeout(() => {\r\n                                            scope.number = 2;\r\n                                            $timeout(() => {\r\n                                                scope.number = 1;\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n","angular.module('ecom').directive('navBar', function () {\r\n   return{\r\n       restrict: 'E',\r\n       template: `<div id=\"navbarNav1\">\r\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"products({type:'allproducts'})\">&nbsp;All\r\n                                                                                                 Products</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\r\n                              </li>\r\n                        </ul>\r\n                        <form class=\"form-inline waves-effect waves-light\">\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\r\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\r\n                        </form>\r\n                  </div>`\r\n   }\r\n});\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n\r\n    let vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/products'\r\n        });\r\n    };\r\n    vm.getProductsByType = type => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/products/' + type\r\n        })\r\n    }\r\n    vm.getProductById = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/product/' + $stateParams.id\r\n        })\r\n    }\r\n    vm.getProductById2 = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/product/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.login = (username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: '/api/login'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/logout'\r\n        })\r\n    }\r\n    vm.checkLogin = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: '/api/checklogin'\r\n        })\r\n    };\r\n})\r\n","angular.module('ecom').factory('modelFactory', () => {\r\n    let total = [],\r\n\r\n        displayTotal = t => {\r\n            total.push(t);\r\n        },\r\n\r\n        getTotal = () => {\r\n            while (total.length > 1) {\r\n                total.shift();\r\n            }\r\n            return total[0];\r\n        }\r\n    return {\r\n        displayTotal: displayTotal,\r\n        getTotal: getTotal\r\n    };\r\n});\r\n"]}