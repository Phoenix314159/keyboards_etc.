{"version":3,"sources":["bundle.js","app.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","controller/loginCtrl.js","controller/mainCtrl.js","directives/buttonD.js","directives/changeText.js","directives/countDown.js","directives/login2.js","directives/shipping.js","services/mainService.js","services/modelFactory.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","state","url","template","component","templateUrl","otherwise","controller","mainService","vm","this","subscribe","alert","name","require","main","$timeout","$state","$onInit","login","username","password","then","response","console","log","deleteAllFromCart","getCustomerInfo","data","firstname","show","goHome","number","go","controllerAs","$http","text","loggedIn","method","serverUrl","logout","getProducts","products","customer","addToCart","productId","id","showCart","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","updateQuantity","deleteFromCart","addNewUser","signUp","lastname","email","count","$scope","directive","restrict","link","scope","elem","attr","on","html","element","attrs","service","$stateParams","type","getProductById","customerId","factory"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router']).config(function ($urlRouterProvider, $stateProvider) {\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productdetails',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        templateUrl: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n    // bindings: {\n    //   loggedIn: '='\n    // },\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        // vm.addToCart = (productId) => {\n        //     mainService.addToCart(1, productId, 1).then(response => {\n        //     })\n        // }\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.$onInit = function () {\n            vm.login = function () {\n                vm.main.login(vm.username, vm.password).then(function (response) {\n                    //login user\n                    console.log(response);\n                    mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                    });\n                    mainService.getCustomerInfo().then(function (response) {\n                        //get customers first name\n                        vm.name = response.data.firstname;\n                    });\n                });\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n        var serverUrl = 'http://localhost:3055',\n            vm = this;\n        vm.text = 'Login';\n        vm.login = function (username, password) {\n            vm.text = 'Logout';\n            vm.loggedIn = true;\n            return $http({\n                method: 'POST',\n                data: { username: username, password: password },\n                url: serverUrl + '/api/login'\n            });\n        };\n\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                console.log(vm.data);\n                vm.text = 'Login';\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n\n    templateUrl: './views/payment.html',\n\n    controller: function controller() {}\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html'\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n            });\n        };\n        vm.getProducts();\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        if (response.data.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                        }\n                    });\n                });\n            };\n            vm.deleteFromCart = function (cartid) {\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    // bindings: {\n    //     view: '<'\n    // },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('ecom').controller('loginCtrl', function (mainService) {\n    // let vm = this;\n    // vm.loggedIn = false;\n    // vm.login = () => {\n    //     mainService.login(vm.username, vm.password).then(response => {\n    //         vm.loggedIn = true;\n    //     })\n    // }\n    // vm.text = 'Login';\n    // if (vm.isLoggedIn) {\n    //     vm.text = 'Welcome';\n    // }\n});\n'use strict';\n\nangular.module('ecom').controller('mainCtrl', function ($scope, $http) {});\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('changeText', function (mainService) {\n    // return {\n    //     restrict: 'A',\n    //     link: function (scope, elem, attr) {\n    //         let x = mainService.isLoggedIn;\n    //         elem.on('click', function () {\n    //             elem.html(\"Welcome\");\n    //         })\n    //     }\n    // }\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('login2', function (mainService) {\n   // return{\n   //     restrict: 'A',\n   //     templateUrl: './views/home.html',\n   //     link: (scope, element, attrs) => {\n   //\n   //     },\n   //     controller: function () {\n   //\n   //     }\n   //\n   // }\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3055',\n        vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + $stateParams.type\n        });\n    };\n\n    vm.getProductById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function ($http) {\n   //  let serverUrl = 'http://localhost:3055',\n   //      isLoggedIn = 'Login';\n   //\n   // let logged = () => {\n   //     return isLoggedIn;\n   // }\n   //  // let login  = (username, password) => {\n   //  //      isLoggedIn = 'Welcome';\n   //  //     return $http({\n   //  //         method: 'POST',\n   //  //         data: {username, password},\n   //  //         url: serverUrl + '/api/login'\n   //  //     })\n   //  // };\n   //  return {\n   //\n   //      logged: logged,\n   //      login: login\n   //\n   //  };\n});","angular.module('ecom', ['ui.router'])\r\n    .config(function ($urlRouterProvider, $stateProvider) {\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productdetails',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                templateUrl: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n    // bindings: {\r\n    //   loggedIn: '='\r\n    // },\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        // vm.addToCart = (productId) => {\r\n        //     mainService.addToCart(1, productId, 1).then(response => {\r\n        //     })\r\n        // }\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.$onInit = () => {\r\n            vm.login = () => {\r\n                vm.main.login(vm.username, vm.password).then(response => {  //login user\r\n                    console.log(response);\r\n                    mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                    })\r\n                    mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                        vm.name = response.data.firstname;\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n        let serverUrl = 'http://localhost:3055',\r\n            vm = this;\r\n        vm.text = 'Login';\r\n        vm.login = (username, password) => {\r\n            vm.text = 'Logout';\r\n            vm.loggedIn = true;\r\n            return $http({\r\n                method: 'POST',\r\n                data: {username, password},\r\n                url: serverUrl + '/api/login'\r\n            })\r\n        };\r\n\r\n\r\n            vm.logout = () => {\r\n                mainService.logout().then(response => {\r\n                    vm.data = response.data;\r\n                    console.log(vm.data);\r\n                    vm.text = 'Login';\r\n                    $state.go('home');\r\n                })\r\n            }\r\n\r\n\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function () {\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html'\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n            })\r\n        }\r\n        vm.getProducts();\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                        vm.showCart = true;  //show cart if not empty\r\n                        vm.products = response.data.map(v => { //add total property on each object in products array\r\n                            v.total = v.price * v.quantity     // to get correct quantity\r\n                            return v;\r\n                        });\r\n                        vm.cartTotal = 0;\r\n                        vm.quantityTotal = 0;\r\n                        for (let i = 0; i < vm.products.length; i++) {\r\n                            vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                            vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                        }\r\n                        vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                        vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                    }\r\n\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else {\r\n                            vm.showCart = false;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    // bindings: {\r\n    //     view: '<'\r\n    // },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    $timeout(function () {\r\n                        vm.count = 1;\r\n                    },1000)\r\n                    vm.count = 2;\r\n                },2000)\r\n                $state.go('home');\r\n            },3000)\r\n\r\n\r\n\r\n    }\r\n})\r\n","angular.module('ecom').controller('loginCtrl', function (mainService) {\r\n    // let vm = this;\r\n    // vm.loggedIn = false;\r\n    // vm.login = () => {\r\n    //     mainService.login(vm.username, vm.password).then(response => {\r\n    //         vm.loggedIn = true;\r\n    //     })\r\n    // }\r\n    // vm.text = 'Login';\r\n    // if (vm.isLoggedIn) {\r\n    //     vm.text = 'Welcome';\r\n    // }\r\n});\r\n","angular.module('ecom').controller('mainCtrl', function ($scope, $http) {\r\n\r\n\r\n})\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('changeText', function (mainService) {\r\n    // return {\r\n    //     restrict: 'A',\r\n    //     link: function (scope, elem, attr) {\r\n    //         let x = mainService.isLoggedIn;\r\n    //         elem.on('click', function () {\r\n    //             elem.html(\"Welcome\");\r\n    //         })\r\n    //     }\r\n    // }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('login2', function (mainService) {\r\n   // return{\r\n   //     restrict: 'A',\r\n   //     templateUrl: './views/home.html',\r\n   //     link: (scope, element, attrs) => {\r\n   //\r\n   //     },\r\n   //     controller: function () {\r\n   //\r\n   //     }\r\n   //\r\n   // }\r\n});\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    let serverUrl = 'http://localhost:3055',\r\n        vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + $stateParams.type\r\n        })\r\n    };\r\n\r\n    vm.getProductById = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        })\r\n    }\r\n\r\n\r\n})\r\n","angular.module('ecom').factory('modelFactory', ($http) => {\r\n   //  let serverUrl = 'http://localhost:3055',\r\n   //      isLoggedIn = 'Login';\r\n   //\r\n   // let logged = () => {\r\n   //     return isLoggedIn;\r\n   // }\r\n   //  // let login  = (username, password) => {\r\n   //  //      isLoggedIn = 'Welcome';\r\n   //  //     return $http({\r\n   //  //         method: 'POST',\r\n   //  //         data: {username, password},\r\n   //  //         url: serverUrl + '/api/login'\r\n   //  //     })\r\n   //  // };\r\n   //  return {\r\n   //\r\n   //      logged: logged,\r\n   //      login: login\r\n   //\r\n   //  };\r\n});\r\n"]}