{"version":3,"sources":["bundle.js","app.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","directives/angular-parallax.js","directives/backGround.js","directives/buttonD.js","directives/countDown.js","directives/countDown2.js","directives/fade.js","directives/navBar.js","directives/shipping.js","services/mainService.js","services/modelFactory.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","stripeProvider","setPublishableKey","state","url","template","component","templateUrl","otherwise","controller","mainService","vm","this","product3","subscribe","alert","name","getCustomerInfo","then","response","customer","data","getProductById2","response1","response2","response3","product16","push","product5","product29","addToCart","productId","id","require","main","$timeout","$state","login","username","password","deleteAllFromCart","firstname","check","$onInit","checkLogin","show","goHome","number","go","controllerAs","$http","user","logged","logout","parent","stripe","modelFactory","payment","amount","getTotal","showP","charge","card","createToken","console","log","last4","copy","token","Number","post","catch","err","type","test","message","$stateParams","getProducts","products","product1","getProductById","product","getProductsByType","showCart","showBox2","show2","showBox","message1","message2","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","updateQuantity","cart","cart1","pId","displayTotal","deleteFromCart","addNewUser","signUp","lastname","email","count","directive","$window","restrict","scope","parallaxRatio","parallaxVerticalOffset","parallaxHorizontalOffset","link","$scope","elem","attrs","setPosition","calcValY","pageYOffset","innerHeight","topVal","hozVal","indexOf","css","element","bind","transclude","prop","e","$apply","$interval","attr","background-image","backgrounds","bg_string","background-size","background-position","background-attachment","background-repeat","height","width","transition","-webkit-backface-visibility","-webkit-transform","-webkit-animation","on","html","mouseleave","box-shadow","opacity","mouseenter","service","serverUrl","method","customerId","factory","t","shift"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax']).config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\n    stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productsdetails/:id',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        template: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.product3 = [];\n\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n        mainService.getProductById2(16).then(function (response1) {\n            //get an array of the 3 specific products on the home page to display\n            mainService.getProductById2(5).then(function (response2) {\n                mainService.getProductById2(29).then(function (response3) {\n\n                    vm.product16 = response1.data[0];\n                    vm.product3.push(vm.product16);\n                    vm.product5 = response2.data[0];\n                    vm.product3.push(vm.product5);\n                    vm.product29 = response3.data[0];\n                    vm.product3.push(vm.product29);\n                });\n            });\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n\n        vm.login = function () {\n            mainService.login(vm.username, vm.password).then(function (response) {\n                //login user\n                mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                });\n                mainService.getCustomerInfo().then(function (response) {\n                    //get customers first name\n                    vm.name = response.data.firstname;\n                    vm.check();\n                });\n            });\n        };\n        vm.$onInit = function () {\n            vm.check = function () {\n                vm.main.checkLogin();\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n        var vm = this;\n        vm.checkLogin = function () {\n            mainService.checkLogin().then(function (response) {\n                if (response.data.user) {\n                    vm.user = true;\n                }\n            });\n        };\n        vm.checkLogin();\n        vm.logged = function () {\n            if (vm.user) {\n                return true;\n            }\n        };\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                vm.user = false;\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n    require: {\n        parent: '^mainComp'\n    },\n    templateUrl: './views/payment.html',\n\n    controller: function controller(stripe, $http, mainService, modelFactory, $state, $timeout) {\n        var vm = this;\n        vm.payment = {};\n        vm.amount = modelFactory.getTotal();\n        vm.showP = true;\n        vm.show = function () {\n            vm.showP = false;\n        };\n        vm.charge = function () {\n            mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n            });\n\n            return stripe.card.createToken(vm.payment.card).then(function (response) {\n                console.log('token created for card ending in ', response.card.last4);\n                var payment = angular.copy(vm.payment);\n                payment.card = void 0;\n                payment.token = response.id;\n                payment.amount = Number(vm.amount * 100);\n                return $http.post('http://localhost:3085/api/payments', payment); //post payment to server\n            }).then(function (payment) {\n                console.log('successfully submitted payment for $', payment.amount);\n            }).catch(function (err) {\n                if (err.type && /^Stripe/.test(err.type)) {\n                    console.log('Stripe error: ', err.message);\n                } else {\n                    console.log('Other error occurred, possibly with your API', err.message);\n                }\n            });\n        };\n\n        vm.goHome = function () {\n            $timeout(function () {\n                $timeout(function () {\n                    $timeout(function () {\n                        $timeout(function () {\n                            $timeout(function () {\n                                $timeout(function () {\n                                    $timeout(function () {\n                                        $timeout(function () {\n                                            $timeout(function () {\n                                                $timeout(function () {\n                                                    $state.go('home');\n                                                }, 1000);\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n                vm.product1 = $stateParams.id;\n            });\n        };\n        vm.getProducts();\n\n        mainService.getProductById().then(function (response) {\n            vm.product = response.data[0];\n        });\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.getProductsByType = function () {\n            mainService.getProductsByType($stateParams.type).then(function (response) {\n                vm.products = response.data;\n            });\n        };\n        vm.getProductsByType();\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n    require: {\n        main: '^mainComp'\n    },\n\n    controller: function controller(mainService, modelFactory) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        vm.showBox2 = true;\n        vm.show2 = false;\n        vm.$onInit = function () {\n            vm.show = vm.main.logged();\n            if (vm.show) {\n                vm.showBox = true;\n                vm.show2 = true;\n            } else {\n                vm.showBox = false;\n            }\n        };\n\n        vm.message1 = 'You have no items in your cart';\n        vm.message2 = 'Please log in to add items to your cart';\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.show2 = false;\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n\n                    mainService.getCart(vm.customer.id).then(function (response) {\n\n                        vm.cart = response.data;\n                        vm.cart1 = vm.cart[0].cartid;\n                        console.log(vm.cart[0]);\n                        if (vm.cart.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                            vm.pId = false;\n                            if (vm.quantityTotal === 0) {\n                                vm.pId = true;\n                                if (vm.cart.length === 0) {\n                                    vm.showCart = false;\n                                    vm.show2 === true;\n                                }\n                            }\n                        }\n                    });\n                });\n            };\n            vm.displayTotal = function () {\n                modelFactory.displayTotal(vm.gTotal);\n            };\n            vm.deleteFromCart = function (cartid) {\n                console.log('working');\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else if (response.data.length === 0) {\n                            vm.showCart = false;\n                            vm.show2 = true;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('angular-parallax', []).directive('parallax', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@',\n      parallaxHorizontalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        if (!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1);\n        if (calcValY <= $window.innerHeight) {\n          var topVal = calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY;\n          var hozVal = $scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset;\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\n        }\n      };\n\n      setPosition();\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]).directive('parallaxBackground', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    transclude: true,\n    template: '<div ng-transclude></div>',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\n        // horizontal positioning\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\n      };\n\n      // set our initial position - fixes webkit background render bug\n      angular.element($window).bind('load', function (e) {\n        setPosition();\n        $scope.$apply();\n      });\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]);\n'use strict';\n\nangular.module('ecom').directive('backGround', function ($timeout, $interval) {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.css({ 'background-image': './images/image1.jpeg' });\n            var backgrounds = ['./js2/images/image2.jpg', './js2/images/image3.jpg', './js2/images/image4.jpg', './js2/images/image5.JPG', './js2/images/image6.jpg', './js2/images/image7.jpg', './js2/images/image8.jpg', './js2/images/image9.jpg', './js2/images/image10.jpg', './js2/images/image1.jpeg'];\n            var i = -1;\n\n            $interval(function () {\n                i++;\n                if (i === backgrounds.length - 1) {\n                    i = 0;\n                }\n                var bg_string = \"url(\" + backgrounds[i] + \")\";\n                elem.css({\n                    'background-image': bg_string,\n                    'background-size': 'cover',\n                    'background-position': 'center',\n                    'background-attachment': 'fixed',\n                    'background-repeat': 'no-repeat',\n                    'height': '100%',\n                    'width': '100%',\n                    'transition': '1.5s',\n                    '-webkit-backface-visibility': 'hidden',\n                    '-webkit-transform': 'translateZ(0) scale(1.0, 1.0)',\n                    '-webkit-animation': 'fadein 1.5s' });\n            }, 7500);\n        }\n    };\n});\n\n//         // let base = 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb',\n//             secs = 4;\n//         backgrounds.forEach(function(img){\n//             new Image().src = base + img;\n//             // caches images, avoiding white flash between background replacements\n//         });\n//\n//         function backgroundSequence() {\n//             window.clearTimeout();\n//             var k = 0;\n//             for (let i = 0; i < backgrounds.length; i++) {\n//                 setTimeout(function(){\n//                     console.log('working');\n//                     attr.style.background = \"url(\" + base + backgrounds[k] + \") no-repeat center center fixed\";\n//                     attr.style.backgroundSize =\"cover\";\n//                     if ((k + 1) === backgrounds.length) { setTimeout(function() { backgroundSequence() }, (secs * 1000))} else { k++; }\n//                 }, (secs * 1000) * i)\n//             }\n//         }\n//         backgroundSequence();\n//\n//\n//\n//\n//     //         current = 0;\n//     //     let nextBackground = () => {\n//     //         elem.css('background',\n//     //             backgrounds[current = ++current % backgrounds.length]\n//     //         );\n//     //         setTimeout(nextBackground, 1000);\n//     //     }\n//     //     setTimeout(nextBackground, 1000);\n//     //     elem.css('background', backgrounds[0]);\n//      }\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown2', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 10;\n            $timeout(function () {\n                scope.number = 9;\n                $timeout(function () {\n                    scope.number = 8;\n                    $timeout(function () {\n                        scope.number = 7;\n                        $timeout(function () {\n                            scope.number = 6;\n                            $timeout(function () {\n                                scope.number = 5;\n                                $timeout(function () {\n                                    scope.number = 4;\n                                    $timeout(function () {\n                                        scope.number = 3;\n                                        $timeout(function () {\n                                            scope.number = 2;\n                                            $timeout(function () {\n                                                scope.number = 1;\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('fade', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.mouseleave(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\n                    'opacity': '0'\n                });\n            });\n            elem.mouseenter(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\n                    'opacity': '1'\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('navBar', function () {\n      return {\n            restrict: 'E',\n            template: '<div id=\"navbarNav1\">\\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"products({type:\\'allproducts\\'})\">&nbsp;All\\n                                                                                                 Products</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\\n                              </li>\\n                        </ul>\\n                        <form class=\"form-inline waves-effect waves-light\">\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\\n                        </form>\\n                  </div>'\n      };\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3085',\n        vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products'\n        });\n    };\n    vm.getProductsByType = function (type) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + type\n        });\n    };\n    vm.getProductById = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + $stateParams.id\n        });\n    };\n    vm.getProductById2 = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n    vm.login = function (username, password) {\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.checkLogin = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/checklogin'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function () {\n    var total = [],\n        displayTotal = function displayTotal(t) {\n        total.push(t);\n    },\n        getTotal = function getTotal() {\n        while (total.length > 1) {\n            total.shift();\n        }\n        return total[0];\n    };\n    return {\n        displayTotal: displayTotal,\n        getTotal: getTotal\n    };\n});","angular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax'])\r\n    .config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\r\n        stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productsdetails/:id',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                template: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.product3 = [];\r\n\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n        mainService.getProductById2(16).then(response1 => { //get an array of the 3 specific products on the home page to display\r\n            mainService.getProductById2(5).then(response2 => {\r\n                mainService.getProductById2(29).then(response3 => {\r\n\r\n                    vm.product16 = response1.data[0];\r\n                    vm.product3.push(vm.product16);\r\n                    vm.product5 = response2.data[0];\r\n                    vm.product3.push(vm.product5);\r\n                    vm.product29 = response3.data[0];\r\n                    vm.product3.push(vm.product29);\r\n                })\r\n            })\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n\r\n        vm.login = () => {\r\n            mainService.login(vm.username, vm.password).then(response => {  //login user\r\n                mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                })\r\n                mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                    vm.name = response.data.firstname;\r\n                    vm.check();\r\n                })\r\n            })\r\n        }\r\n        vm.$onInit = () => {\r\n            vm.check = () => {\r\n                vm.main.checkLogin()\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n        let vm = this;\r\n        vm.checkLogin = () => {\r\n            mainService.checkLogin().then(response => {\r\n                if (response.data.user) {\r\n                    vm.user = true;\r\n                }\r\n            })\r\n        }\r\n        vm.checkLogin();\r\n        vm.logged = () => {\r\n            if (vm.user) {\r\n                return true;\r\n            }\r\n        }\r\n        vm.logout = () => {\r\n            mainService.logout().then(response => {\r\n                vm.data = response.data;\r\n                vm.user = false;\r\n                $state.go('home');\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n    require: {\r\n        parent: '^mainComp'\r\n    },\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function (stripe, $http, mainService, modelFactory, $state, $timeout) {\r\n        let vm = this;\r\n        vm.payment = {};\r\n        vm.amount = modelFactory.getTotal();\r\n        vm.showP = true;\r\n        vm.show = () => {\r\n            vm.showP = false;\r\n        }\r\n        vm.charge = () => {\r\n            mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n            })\r\n\r\n            return stripe.card.createToken(vm.payment.card).then(response => {\r\n                console.log('token created for card ending in ', response.card.last4);\r\n                let payment = angular.copy(vm.payment);\r\n                payment.card = void 0;\r\n                payment.token = response.id;\r\n                payment.amount = Number(vm.amount * 100);\r\n                return $http.post('http://localhost:3085/api/payments', payment);  //post payment to server\r\n            }).then(function (payment) {\r\n                console.log('successfully submitted payment for $', payment.amount);\r\n            })\r\n                .catch(function (err) {\r\n                    if (err.type && /^Stripe/.test(err.type)) {\r\n                        console.log('Stripe error: ', err.message);\r\n                    }\r\n                    else {\r\n                        console.log('Other error occurred, possibly with your API', err.message);\r\n                    }\r\n                });\r\n        };\r\n\r\n        vm.goHome = () => {\r\n            $timeout(() => {\r\n                $timeout(() => {\r\n                    $timeout(() => {\r\n                        $timeout(() => {\r\n                            $timeout(() => {\r\n                                $timeout(() => {\r\n                                    $timeout(() => {\r\n                                        $timeout(() => {\r\n                                            $timeout(() => {\r\n                                                $timeout(() => {\r\n                                                    $state.go('home');\r\n                                                }, 1000)\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n})\r\n\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n                vm.product1 = $stateParams.id;\r\n            })\r\n        }\r\n         vm.getProducts();\r\n\r\n        mainService.getProductById().then(response => {\r\n            vm.product = response.data[0];\r\n        })\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.getProductsByType = () => {\r\n            mainService.getProductsByType($stateParams.type).then(response => {\r\n                vm.products = response.data;\r\n\r\n            })\r\n        };\r\n        vm.getProductsByType();\r\n\r\n        vm.addToCart = productId => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n\r\n    controller: function (mainService, modelFactory) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        vm.showBox2 = true;\r\n        vm.show2 = false;\r\n        vm.$onInit = () => {\r\n            vm.show = vm.main.logged();\r\n            if (vm.show) {\r\n                vm.showBox = true;\r\n                vm.show2 = true;\r\n            } else {\r\n                vm.showBox = false;\r\n            }\r\n        }\r\n\r\n        vm.message1 = 'You have no items in your cart';\r\n        vm.message2 = 'Please log in to add items to your cart'\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;  //show cart if not empty\r\n                    vm.show2 = false;\r\n                    vm.products = response.data.map(v => { //add total property on each object in products array\r\n                        v.total = v.price * v.quantity     // to get correct quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                }\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n\r\n                        vm.cart = response.data;\r\n                        vm.cart1 = vm.cart[0].cartid;\r\n                        console.log(vm.cart[0]);\r\n                        if (vm.cart.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                            vm.pId = false;\r\n                            if (vm.quantityTotal === 0) {\r\n                                vm.pId = true;\r\n                                if(vm.cart.length === 0){\r\n                                    vm.showCart = false;\r\n                                    vm.show2 === true;\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.displayTotal = () => {\r\n                modelFactory.displayTotal(vm.gTotal);\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                console.log('working');\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else if (response.data.length === 0) {\r\n                            vm.showCart = false\r\n                            vm.show2 = true;\r\n                        }\r\n                        else {\r\n                            vm.showCart = false\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n        $timeout(function () {\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    vm.count = 1;\r\n                }, 1000)\r\n                vm.count = 2;\r\n            }, 2000)\r\n            $state.go('home');\r\n        }, 3000)\r\n    }\r\n})\r\n","'use strict';\r\n\r\nangular.module('angular-parallax', [\r\n]).directive('parallax', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n      parallaxHorizontalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        if(!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\r\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1 );\r\n        if (calcValY <= $window.innerHeight) {\r\n          var topVal = (calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY);\r\n          var hozVal = ($scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset);\r\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\r\n        }\r\n      };\r\n\r\n      setPosition();\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]).directive('parallaxBackground', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    transclude: true,\r\n    template: '<div ng-transclude></div>',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\r\n        // horizontal positioning\r\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\r\n      };\r\n\r\n      // set our initial position - fixes webkit background render bug\r\n      angular.element($window).bind('load', function(e) {\r\n        setPosition();\r\n        $scope.$apply();\r\n      });\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]);\r\n","angular.module('ecom').directive('backGround', function ($timeout, $interval) {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, elem, attr) => {\r\n            elem.css({'background-image': './images/image1.jpeg'});\r\n            let backgrounds = [\r\n                './js2/images/image2.jpg',\r\n                './js2/images/image3.jpg',\r\n                './js2/images/image4.jpg',\r\n                './js2/images/image5.JPG',\r\n                './js2/images/image6.jpg',\r\n                './js2/images/image7.jpg',\r\n                './js2/images/image8.jpg',\r\n                './js2/images/image9.jpg',\r\n                './js2/images/image10.jpg',\r\n                './js2/images/image1.jpeg'\r\n            ];\r\n            let i = -1;\r\n\r\n            $interval(() => {\r\n                i++;\r\n                if (i === backgrounds.length - 1) {\r\n                    i = 0;\r\n                }\r\n                let bg_string = \"url(\" + backgrounds[i] + \")\";\r\n                elem.css({\r\n                    'background-image': bg_string,\r\n                    'background-size': 'cover',\r\n                    'background-position': 'center',\r\n                    'background-attachment': 'fixed',\r\n                    'background-repeat': 'no-repeat',\r\n                    'height': '100%',\r\n                    'width': '100%',\r\n                    'transition': '1.5s',\r\n                    '-webkit-backface-visibility': 'hidden',\r\n                    '-webkit-transform': 'translateZ(0) scale(1.0, 1.0)',\r\n                    '-webkit-animation': 'fadein 1.5s' });\r\n            }, 7500)\r\n        }\r\n    }\r\n})\r\n\r\n//         // let base = 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb',\r\n//             secs = 4;\r\n//         backgrounds.forEach(function(img){\r\n//             new Image().src = base + img;\r\n//             // caches images, avoiding white flash between background replacements\r\n//         });\r\n//\r\n//         function backgroundSequence() {\r\n//             window.clearTimeout();\r\n//             var k = 0;\r\n//             for (let i = 0; i < backgrounds.length; i++) {\r\n//                 setTimeout(function(){\r\n//                     console.log('working');\r\n//                     attr.style.background = \"url(\" + base + backgrounds[k] + \") no-repeat center center fixed\";\r\n//                     attr.style.backgroundSize =\"cover\";\r\n//                     if ((k + 1) === backgrounds.length) { setTimeout(function() { backgroundSequence() }, (secs * 1000))} else { k++; }\r\n//                 }, (secs * 1000) * i)\r\n//             }\r\n//         }\r\n//         backgroundSequence();\r\n//\r\n//\r\n//\r\n//\r\n//     //         current = 0;\r\n//     //     let nextBackground = () => {\r\n//     //         elem.css('background',\r\n//     //             backgrounds[current = ++current % backgrounds.length]\r\n//     //         );\r\n//     //         setTimeout(nextBackground, 1000);\r\n//     //     }\r\n//     //     setTimeout(nextBackground, 1000);\r\n//     //     elem.css('background', backgrounds[0]);\r\n//      }\r\n\r\n\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('countDown2', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 10;\r\n            $timeout(() => {\r\n                scope.number = 9;\r\n                $timeout(() => {\r\n                    scope.number = 8;\r\n                    $timeout(() => {\r\n                        scope.number = 7;\r\n                        $timeout(() => {\r\n                            scope.number = 6;\r\n                            $timeout(() => {\r\n                                scope.number = 5;\r\n                                $timeout(() => {\r\n                                    scope.number = 4;\r\n                                    $timeout(() => {\r\n                                        scope.number = 3;\r\n                                        $timeout(() => {\r\n                                            scope.number = 2;\r\n                                            $timeout(() => {\r\n                                                scope.number = 1;\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n","angular.module('ecom').directive('fade', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.mouseleave(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\r\n                    'opacity':'0'\r\n                });\r\n            })\r\n            elem.mouseenter(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\r\n                    'opacity': '1'\r\n                })\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\n","angular.module('ecom').directive('navBar', function () {\r\n   return{\r\n       restrict: 'E',\r\n       template: `<div id=\"navbarNav1\">\r\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"products({type:'allproducts'})\">&nbsp;All\r\n                                                                                                 Products</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\r\n                              </li>\r\n                        </ul>\r\n                        <form class=\"form-inline waves-effect waves-light\">\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\r\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\r\n                        </form>\r\n                  </div>`\r\n   }\r\n});\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    let serverUrl = 'http://localhost:3085',\r\n        vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products'\r\n        })\r\n    };\r\n    vm.getProductsByType = (type) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + type\r\n        })\r\n    }\r\n    vm.getProductById = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + $stateParams.id\r\n        })\r\n    }\r\n    vm.getProductById2 = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.login = (username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: serverUrl + '/api/login'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        })\r\n    }\r\n    vm.checkLogin = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/checklogin'\r\n        })\r\n    };\r\n})\r\n","angular.module('ecom').factory('modelFactory', () => {\r\n    let total = [],\r\n\r\n        displayTotal = t => {\r\n            total.push(t);\r\n        },\r\n\r\n        getTotal = () => {\r\n            while (total.length > 1) {\r\n                total.shift();\r\n            }\r\n            return total[0];\r\n        }\r\n    return {\r\n        displayTotal: displayTotal,\r\n        getTotal: getTotal\r\n    };\r\n});\r\n"]}