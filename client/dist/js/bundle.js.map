{"version":3,"sources":["bundle.js","app.js","services/mainService.js","services/modelFactory.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","directives/buttonD.js","directives/changeText.js","directives/countDown.js","directives/login2.js","directives/shipping.js","controller/loginCtrl.js","controller/mainCtrl.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","stripeProvider","setPublishableKey","state","url","template","component","templateUrl","otherwise","service","$http","$stateParams","serverUrl","vm","this","getCustomerInfo","method","getProducts","getProductsByType","type","getProductById","id","getProductById2","signUp","firstname","lastname","email","username","password","data","getCart","addToCart","customerId","productId","quantity","deleteFromCart","deleteAllFromCart","updateQuantity","login","logout","checkLogin","factory","controller","mainService","product3","product4","subscribe","alert","name","then","response","customer","response1","response2","response3","response4","response5","response6","product16","push","product5","product29","product2","product26","product23","require","main","$timeout","$state","console","log","check","$onInit","show","goHome","number","go","controllerAs","user","logged","stripe","payment","charge","card","createToken","last4","copy","token","post","amount","catch","err","test","message","products","product1","product","showCart","showBox2","show2","showBox","message1","message2","length","map","v","total","price","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","addNewUser","count","directive","restrict","link","scope","elem","attr","on","html","element","attrs","$scope"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router', 'angular-stripe']).config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\n    stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productsdetails/:id',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        template: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3065',\n        vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products'\n        });\n    };\n    vm.getProductsByType = function (type) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + type\n        });\n    };\n    vm.getProductById = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + $stateParams.id\n        });\n    };\n    vm.getProductById2 = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n    vm.login = function (username, password) {\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.checkLogin = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/checklogin'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function ($http) {\n   //  let serverUrl = 'http://localhost:3055',\n   //      isLoggedIn = 'Login';\n   //\n   // let logged = () => {\n   //     return isLoggedIn;\n   // }\n   //  // let login  = (username, password) => {\n   //  //      isLoggedIn = 'Welcome';\n   //  //     return $http({\n   //  //         method: 'POST',\n   //  //         data: {username, password},\n   //  //         url: serverUrl + '/api/login'\n   //  //     })\n   //  // };\n   //  return {\n   //\n   //      logged: logged,\n   //      login: login\n   //\n   //  };\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.product3 = [];\n        vm.product4 = [];\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n        mainService.getProductById2(16).then(function (response1) {\n            //get an array of the 3 specific products on the home page to display\n            mainService.getProductById2(5).then(function (response2) {\n                mainService.getProductById2(29).then(function (response3) {\n                    mainService.getProductById2(2).then(function (response4) {\n                        mainService.getProductById2(26).then(function (response5) {\n                            mainService.getProductById2(23).then(function (response6) {\n\n                                vm.product16 = response1.data[0];\n                                vm.product3.push(vm.product16);\n                                vm.product5 = response2.data[0];\n                                vm.product3.push(vm.product5);\n                                vm.product29 = response3.data[0];\n                                vm.product3.push(vm.product29);\n                                vm.product2 = response4.data[0];\n                                vm.product4.push(vm.product2);\n                                vm.product26 = response5.data[0];\n                                vm.product4.push(vm.product26);\n                                vm.product23 = response6.data[0];\n                                vm.product4.push(vm.product23);\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n\n        vm.login = function () {\n            mainService.login(vm.username, vm.password).then(function (response) {\n                //login user\n                console.log(response);\n                mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                });\n                mainService.getCustomerInfo().then(function (response) {\n                    //get customers first name\n                    vm.name = response.data.firstname;\n                    vm.check();\n                });\n            });\n        };\n        vm.$onInit = function () {\n            vm.check = function () {\n                vm.main.checkLogin();\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n\n        var vm = this;\n        vm.checkLogin = function () {\n            mainService.checkLogin().then(function (response) {\n                console.log(response);\n                if (response.data.user) {\n                    vm.user = true;\n                }\n            });\n        };\n        vm.checkLogin();\n\n        vm.logged = function () {\n            if (vm.user) {\n                return true;\n            }\n        };\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                vm.user = false;\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n\n    templateUrl: './views/payment.html',\n\n    controller: function controller(stripe, $http) {\n        var vm = this;\n        vm.payment = {};\n\n        vm.charge = function () {\n            return stripe.card.createToken(vm.payment.card).then(function (response) {\n                console.log('token created for card ending in ', response.card.last4);\n                var payment = angular.copy(vm.payment);\n                payment.card = void 0;\n                payment.token = response.id;\n                return $http.post('http://localhost:3065/payments', payment);\n            }).then(function (payment) {\n                console.log('successfully submitted payment for $', payment.amount);\n            }).catch(function (err) {\n                if (err.type && /^Stripe/.test(err.type)) {\n                    console.log('Stripe error: ', err.message);\n                } else {\n                    console.log('Other error occurred, possibly with your API', err.message);\n                }\n            });\n        };\n    }\n    //         vm.elements = stripe.elements();\n    //         vm.style = {\n    //             base: {\n    //                 // Add your base input styles here. For example:\n    //                 fontSize: '16px',\n    //                 lineHeight: '24px',\n    //             },\n    //         };\n    //\n    // // Create an instance of the card Element\n    //         vm.card = elements.create('card', {style});\n    //\n    // // Add an instance of the card Element into the `card-element` <div>\n    //         vm.card.mount('#card-element');\n\n\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n                vm.product1 = $stateParams.id;\n            });\n        };\n        vm.getProducts();\n\n        mainService.getProductById().then(function (response) {\n            vm.product = response.data[0];\n        });\n\n        // mainService.getProductsByType(vm.id).then(response => {\n        //     vm.product2 = response.data;\n        //     console.log(response.data);\n        // })\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.getProductsByType = function () {\n            mainService.getProductsByType($stateParams.type).then(function (response) {\n                vm.products = response.data;\n            });\n        };\n        vm.getProductsByType();\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n    require: {\n        main: '^mainComp'\n    },\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        vm.showBox2 = true;\n        vm.show2 = false;\n        vm.$onInit = function () {\n            vm.show = vm.main.logged();\n            if (vm.show) {\n                console.log(vm.show);\n                vm.showBox = true;\n                vm.show2 = true;\n            } else {\n                vm.showBox = false;\n            }\n        };\n\n        vm.message1 = 'You have no items in your cart';\n        vm.message2 = 'Please log in to add items to your cart';\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.show2 = false;\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        if (response.data.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                        }\n                    });\n                });\n            };\n            vm.deleteFromCart = function (cartid) {\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else if (response.data.length === 0) {\n                            vm.showCart = false;\n                            vm.show2 = true;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    // bindings: {\n    //     view: '<'\n    // },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('changeText', function (mainService) {\n    // return {\n    //     restrict: 'A',\n    //     link: function (scope, elem, attr) {\n    //         let x = mainService.isLoggedIn;\n    //         elem.on('click', function () {\n    //             elem.html(\"Welcome\");\n    //         })\n    //     }\n    // }\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('login2', function (mainService) {\n   // return{\n   //     restrict: 'A',\n   //     templateUrl: './views/home.html',\n   //     link: (scope, element, attrs) => {\n   //\n   //     },\n   //     controller: function () {\n   //\n   //     }\n   //\n   // }\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').controller('loginCtrl', function (mainService) {\n    // let vm = this;\n    // vm.loggedIn = false;\n    // vm.login = () => {\n    //     mainService.login(vm.username, vm.password).then(response => {\n    //         vm.loggedIn = true;\n    //     })\n    // }\n    // vm.text = 'Login';\n    // if (vm.isLoggedIn) {\n    //     vm.text = 'Welcome';\n    // }\n});\n'use strict';\n\nangular.module('ecom').controller('mainCtrl', function ($scope, $http) {});","angular.module('ecom', ['ui.router', 'angular-stripe'])\r\n    .config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\r\n        stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productsdetails/:id',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                template: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    let serverUrl = 'http://localhost:3065',\r\n        vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products'\r\n        })\r\n    };\r\n    vm.getProductsByType = (type) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + type\r\n        })\r\n    }\r\n    vm.getProductById = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + $stateParams.id\r\n        })\r\n    }\r\n    vm.getProductById2 = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.login = (username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: serverUrl + '/api/login'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        })\r\n    }\r\n    vm.checkLogin = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/checklogin'\r\n        })\r\n    }\r\n})\r\n","angular.module('ecom').factory('modelFactory', ($http) => {\r\n   //  let serverUrl = 'http://localhost:3055',\r\n   //      isLoggedIn = 'Login';\r\n   //\r\n   // let logged = () => {\r\n   //     return isLoggedIn;\r\n   // }\r\n   //  // let login  = (username, password) => {\r\n   //  //      isLoggedIn = 'Welcome';\r\n   //  //     return $http({\r\n   //  //         method: 'POST',\r\n   //  //         data: {username, password},\r\n   //  //         url: serverUrl + '/api/login'\r\n   //  //     })\r\n   //  // };\r\n   //  return {\r\n   //\r\n   //      logged: logged,\r\n   //      login: login\r\n   //\r\n   //  };\r\n});\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.product3 = [];\r\n        vm.product4 = [];\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n        mainService.getProductById2(16).then(response1 => { //get an array of the 3 specific products on the home page to display\r\n            mainService.getProductById2(5).then(response2 => {\r\n                mainService.getProductById2(29).then(response3 => {\r\n                    mainService.getProductById2(2).then(response4 => {\r\n                        mainService.getProductById2(26).then(response5 => {\r\n                            mainService.getProductById2(23).then(response6 => {\r\n\r\n                                vm.product16 = response1.data[0];\r\n                                vm.product3.push(vm.product16);\r\n                                vm.product5 = response2.data[0];\r\n                                vm.product3.push(vm.product5);\r\n                                vm.product29 = response3.data[0];\r\n                                vm.product3.push(vm.product29);\r\n                                vm.product2 = response4.data[0];\r\n                                vm.product4.push(vm.product2);\r\n                                vm.product26 = response5.data[0];\r\n                                vm.product4.push(vm.product26);\r\n                                vm.product23 = response6.data[0];\r\n                                vm.product4.push(vm.product23);\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n\r\n        vm.login = () => {\r\n            mainService.login(vm.username, vm.password).then(response => {  //login user\r\n                console.log(response);\r\n                mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                })\r\n                mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                    vm.name = response.data.firstname;\r\n                    vm.check();\r\n                })\r\n            })\r\n        }\r\n        vm.$onInit = () => {\r\n            vm.check = () => {\r\n                vm.main.checkLogin()\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n\r\n        let vm = this;\r\n        vm.checkLogin = () => {\r\n            mainService.checkLogin().then(response => {\r\n                console.log(response);\r\n                if (response.data.user) {\r\n                    vm.user = true;\r\n                }\r\n            })\r\n        }\r\n        vm.checkLogin();\r\n\r\n        vm.logged = () => {\r\n            if (vm.user) {\r\n                return true;\r\n            }\r\n        }\r\n        vm.logout = () => {\r\n            mainService.logout().then(response => {\r\n                vm.data = response.data;\r\n                vm.user = false;\r\n                $state.go('home');\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function (stripe, $http) {\r\n        let vm = this;\r\n        vm.payment = {};\r\n\r\n        vm.charge = () => {\r\n            return stripe.card.createToken(vm.payment.card).then(response => {\r\n                console.log('token created for card ending in ', response.card.last4);\r\n                let payment = angular.copy(vm.payment);\r\n                payment.card = void 0;\r\n                payment.token = response.id;\r\n                return $http.post('http://localhost:3065/payments', payment);\r\n            }).then(function (payment) {\r\n                console.log('successfully submitted payment for $', payment.amount);\r\n            })\r\n                .catch(function (err) {\r\n                    if (err.type && /^Stripe/.test(err.type)) {\r\n                        console.log('Stripe error: ', err.message);\r\n                    }\r\n                    else {\r\n                        console.log('Other error occurred, possibly with your API', err.message);\r\n                    }\r\n                });\r\n        };\r\n    }\r\n//         vm.elements = stripe.elements();\r\n//         vm.style = {\r\n//             base: {\r\n//                 // Add your base input styles here. For example:\r\n//                 fontSize: '16px',\r\n//                 lineHeight: '24px',\r\n//             },\r\n//         };\r\n//\r\n// // Create an instance of the card Element\r\n//         vm.card = elements.create('card', {style});\r\n//\r\n// // Add an instance of the card Element into the `card-element` <div>\r\n//         vm.card.mount('#card-element');\r\n\r\n\r\n})\r\n\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n                vm.product1 = $stateParams.id;\r\n            })\r\n        }\r\n         vm.getProducts();\r\n\r\n        mainService.getProductById().then(response => {\r\n            vm.product = response.data[0];\r\n        })\r\n\r\n        // mainService.getProductsByType(vm.id).then(response => {\r\n        //     vm.product2 = response.data;\r\n        //     console.log(response.data);\r\n        // })\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.getProductsByType = () => {\r\n            mainService.getProductsByType($stateParams.type).then(response => {\r\n                vm.products = response.data;\r\n\r\n            })\r\n        };\r\n        vm.getProductsByType();\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        vm.showBox2 = true;\r\n        vm.show2 = false;\r\n        vm.$onInit = () => {\r\n            vm.show = vm.main.logged();\r\n            if (vm.show) {\r\n                console.log(vm.show)\r\n                vm.showBox = true;\r\n                vm.show2 = true;\r\n            } else {\r\n                vm.showBox = false;\r\n            }\r\n        }\r\n\r\n        vm.message1 = 'You have no items in your cart';\r\n        vm.message2 = 'Please log in to add items to your cart'\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;  //show cart if not empty\r\n                    vm.show2 = false;\r\n                    vm.products = response.data.map(v => { //add total property on each object in products array\r\n                        v.total = v.price * v.quantity     // to get correct quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                }\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else if (response.data.length === 0) {\r\n                            vm.showCart = false\r\n                            vm.show2 = true;\r\n                        }\r\n                        else {\r\n                            vm.showCart = false\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    // bindings: {\r\n    //     view: '<'\r\n    // },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    $timeout(function () {\r\n                        vm.count = 1;\r\n                    },1000)\r\n                    vm.count = 2;\r\n                },2000)\r\n                $state.go('home');\r\n            },3000)\r\n\r\n\r\n\r\n    }\r\n})\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('changeText', function (mainService) {\r\n    // return {\r\n    //     restrict: 'A',\r\n    //     link: function (scope, elem, attr) {\r\n    //         let x = mainService.isLoggedIn;\r\n    //         elem.on('click', function () {\r\n    //             elem.html(\"Welcome\");\r\n    //         })\r\n    //     }\r\n    // }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('login2', function (mainService) {\r\n   // return{\r\n   //     restrict: 'A',\r\n   //     templateUrl: './views/home.html',\r\n   //     link: (scope, element, attrs) => {\r\n   //\r\n   //     },\r\n   //     controller: function () {\r\n   //\r\n   //     }\r\n   //\r\n   // }\r\n});\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').controller('loginCtrl', function (mainService) {\r\n    // let vm = this;\r\n    // vm.loggedIn = false;\r\n    // vm.login = () => {\r\n    //     mainService.login(vm.username, vm.password).then(response => {\r\n    //         vm.loggedIn = true;\r\n    //     })\r\n    // }\r\n    // vm.text = 'Login';\r\n    // if (vm.isLoggedIn) {\r\n    //     vm.text = 'Welcome';\r\n    // }\r\n});\r\n","angular.module('ecom').controller('mainCtrl', function ($scope, $http) {\r\n\r\n\r\n})\r\n"]}