{"version":3,"sources":["bundle.js","app.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","controller/loginCtrl.js","controller/mainCtrl.js","directives/backGround.js","directives/buttonD.js","directives/countDown.js","directives/countDown2.js","directives/fade.js","directives/shipping.js","services/mainService.js","services/modelFactory.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","stripeProvider","setPublishableKey","state","url","template","component","templateUrl","otherwise","controller","mainService","vm","this","product3","product4","subscribe","alert","name","getCustomerInfo","then","response","customer","data","getProductById2","response1","response2","response3","response4","response5","response6","product16","push","product5","product29","product2","product26","product23","addToCart","productId","id","require","main","$timeout","$state","login","username","password","console","log","deleteAllFromCart","firstname","check","$onInit","checkLogin","show","goHome","number","go","controllerAs","$http","user","logged","logout","parent","stripe","modelFactory","payment","amount","getTotal","showP","charge","card","createToken","last4","copy","token","Number","post","catch","err","type","test","message","$stateParams","getProducts","products","product1","getProductById","product","getProductsByType","showCart","showBox2","show2","showBox","displayTotal","gTotal","message1","message2","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","updateTotal","cartid","updateQuantity","deleteFromCart","addNewUser","signUp","lastname","email","count","$scope","directive","$interval","restrict","link","scope","elem","attr","css","background-image","backgrounds","bg_string","background-size","background-position","background-attachment","background-repeat","height","width","transition","-webkit-backface-visibility","on","html","element","attrs","mouseleave","box-shadow","opacity","mouseenter","service","serverUrl","method","customerId","factory","t","shift"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax']).config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\n    stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productsdetails/:id',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        template: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.product3 = [];\n        vm.product4 = [];\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n        mainService.getProductById2(16).then(function (response1) {\n            //get an array of the 3 specific products on the home page to display\n            mainService.getProductById2(5).then(function (response2) {\n                mainService.getProductById2(29).then(function (response3) {\n                    mainService.getProductById2(2).then(function (response4) {\n                        mainService.getProductById2(26).then(function (response5) {\n                            mainService.getProductById2(23).then(function (response6) {\n\n                                vm.product16 = response1.data[0];\n                                vm.product3.push(vm.product16);\n                                vm.product5 = response2.data[0];\n                                vm.product3.push(vm.product5);\n                                vm.product29 = response3.data[0];\n                                vm.product3.push(vm.product29);\n                                vm.product2 = response4.data[0];\n                                vm.product4.push(vm.product2);\n                                vm.product26 = response5.data[0];\n                                vm.product4.push(vm.product26);\n                                vm.product23 = response6.data[0];\n                                vm.product4.push(vm.product23);\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n\n        vm.login = function () {\n            mainService.login(vm.username, vm.password).then(function (response) {\n                //login user\n                console.log(response);\n                mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                });\n                mainService.getCustomerInfo().then(function (response) {\n                    //get customers first name\n                    vm.name = response.data.firstname;\n                    vm.check();\n                });\n            });\n        };\n        vm.$onInit = function () {\n            vm.check = function () {\n                vm.main.checkLogin();\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n        var vm = this;\n        vm.checkLogin = function () {\n            mainService.checkLogin().then(function (response) {\n                if (response.data.user) {\n                    vm.user = true;\n                }\n            });\n        };\n        vm.checkLogin();\n\n        vm.logged = function () {\n            if (vm.user) {\n                return true;\n            }\n        };\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                vm.user = false;\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n    require: {\n        parent: '^mainComp'\n    },\n    templateUrl: './views/payment.html',\n\n    controller: function controller(stripe, $http, mainService, modelFactory, $state, $timeout) {\n        var vm = this;\n        vm.payment = {};\n        vm.amount = modelFactory.getTotal();\n        vm.showP = true;\n        vm.show = function () {\n            vm.showP = false;\n        };\n        vm.charge = function () {\n\n            return stripe.card.createToken(vm.payment.card).then(function (response) {\n                console.log('token created for card ending in ', response.card.last4);\n                var payment = angular.copy(vm.payment);\n                payment.card = void 0;\n                payment.token = response.id;\n                payment.amount = Number(vm.amount * 100);\n                return $http.post('http://localhost:3065/api/payments', payment); //post payment to server\n            }).then(function (payment) {\n                console.log('successfully submitted payment for $', payment.amount);\n            }).catch(function (err) {\n                if (err.type && /^Stripe/.test(err.type)) {\n                    console.log('Stripe error: ', err.message);\n                } else {\n                    console.log('Other error occurred, possibly with your API', err.message);\n                }\n            });\n        };\n        vm.goHome = function () {\n            $timeout(function () {\n                $timeout(function () {\n                    $timeout(function () {\n                        $timeout(function () {\n                            $timeout(function () {\n                                $timeout(function () {\n                                    $timeout(function () {\n                                        $timeout(function () {\n                                            $timeout(function () {\n                                                $timeout(function () {\n                                                    $state.go('home');\n                                                }, 1000);\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n                vm.product1 = $stateParams.id;\n            });\n        };\n        vm.getProducts();\n\n        mainService.getProductById().then(function (response) {\n            vm.product = response.data[0];\n        });\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.getProductsByType = function () {\n            mainService.getProductsByType($stateParams.type).then(function (response) {\n                vm.products = response.data;\n            });\n        };\n        vm.getProductsByType();\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n    require: {\n        main: '^mainComp'\n    },\n\n    controller: function controller(mainService, modelFactory) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        vm.showBox2 = true;\n        vm.show2 = false;\n        vm.$onInit = function () {\n            vm.show = vm.main.logged();\n            if (vm.show) {\n                vm.showBox = true;\n                vm.show2 = true;\n            } else {\n                vm.showBox = false;\n            }\n        };\n        vm.displayTotal = function () {\n            modelFactory.displayTotal(vm.gTotal);\n        };\n\n        vm.message1 = 'You have no items in your cart';\n        vm.message2 = 'Please log in to add items to your cart';\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.show2 = false;\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                    vm.displayTotal();\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        if (response.data.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                        }\n                    });\n                });\n            };\n            vm.deleteFromCart = function (cartid) {\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else if (response.data.length === 0) {\n                            vm.showCart = false;\n                            vm.show2 = true;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    // bindings: {\n    //     view: '<'\n    // },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('ecom').controller('loginCtrl', function (mainService) {\n    // let vm = this;\n    // vm.loggedIn = false;\n    // vm.login = () => {\n    //     mainService.login(vm.username, vm.password).then(response => {\n    //         vm.loggedIn = true;\n    //     })\n    // }\n    // vm.text = 'Login';\n    // if (vm.isLoggedIn) {\n    //     vm.text = 'Welcome';\n    // }\n});\n'use strict';\n\nangular.module('ecom').controller('mainCtrl', function ($scope, $http) {});\n'use strict';\n\nangular.module('ecom').directive('backGround', function ($timeout, $interval) {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.css({ 'background-image': 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb' });\n            var backgrounds = ['https://s-media-cache-ak0.pinimg.com/originals/a9/e7/47/a9e7475a3a0f0af6d06685e8ec544fd3.jpg', 'http://carriagehousemusic.com/wp-content/uploads/2013/08/ssl-long-live-rm-BW-e1400469994189.jpg', 'http://aespeakers.com/wp-content/uploads/2015/11/Phat-Planet-Recording-Studios-3.jpg', 'http://www.mansionaudio.com/wp-content/uploads/2009/10/DSCN1270.JPG', 'https://www.gearslutz.com/board/attachments/photo-diaries-recording-studio-construction-projects/177790d1276237018-ssl-xl-9000k-install-img_1004a.jpg', 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb'];\n            var i = -1;\n            // let x = ['300%', '100%'];\n            $interval(function () {\n                console.log(i);\n                i++;\n                if (i === backgrounds.length - 1) {\n                    i = 0;\n                }\n                var bg_string = \"url(\" + backgrounds[i] + \")\";\n                elem.css({\n                    'background-image': bg_string,\n                    'background-size': 'cover',\n                    'background-position': 'center',\n                    'background-attachment': 'fixed',\n                    'background-repeat': 'no-repeat',\n                    'height': '100vw',\n                    'width': '100vw',\n                    'transition': '3s',\n                    '-webkit-backface-visibility': 'hidden'\n                });\n            }, 5500);\n        }\n\n    };\n});\n\n//         // let base = 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb',\n//             secs = 4;\n//         backgrounds.forEach(function(img){\n//             new Image().src = base + img;\n//             // caches images, avoiding white flash between background replacements\n//         });\n//\n//         function backgroundSequence() {\n//             window.clearTimeout();\n//             var k = 0;\n//             for (let i = 0; i < backgrounds.length; i++) {\n//                 setTimeout(function(){\n//                     console.log('working');\n//                     attr.style.background = \"url(\" + base + backgrounds[k] + \") no-repeat center center fixed\";\n//                     attr.style.backgroundSize =\"cover\";\n//                     if ((k + 1) === backgrounds.length) { setTimeout(function() { backgroundSequence() }, (secs * 1000))} else { k++; }\n//                 }, (secs * 1000) * i)\n//             }\n//         }\n//         backgroundSequence();\n//\n//\n//\n//\n//     //         current = 0;\n//     //     let nextBackground = () => {\n//     //         elem.css('background',\n//     //             backgrounds[current = ++current % backgrounds.length]\n//     //         );\n//     //         setTimeout(nextBackground, 1000);\n//     //     }\n//     //     setTimeout(nextBackground, 1000);\n//     //     elem.css('background', backgrounds[0]);\n//      }\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown2', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 10;\n            $timeout(function () {\n                scope.number = 9;\n                $timeout(function () {\n                    scope.number = 8;\n                    $timeout(function () {\n                        scope.number = 7;\n                        $timeout(function () {\n                            scope.number = 6;\n                            $timeout(function () {\n                                scope.number = 5;\n                                $timeout(function () {\n                                    scope.number = 4;\n                                    $timeout(function () {\n                                        scope.number = 3;\n                                        $timeout(function () {\n                                            scope.number = 2;\n                                            $timeout(function () {\n                                                scope.number = 1;\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('fade', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.mouseleave(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\n                    'opacity': '0'\n\n                });\n            });\n            elem.mouseenter(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\n                    'opacity': '1'\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3065',\n        vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products'\n        });\n    };\n    vm.getProductsByType = function (type) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + type\n        });\n    };\n    vm.getProductById = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + $stateParams.id\n        });\n    };\n    vm.getProductById2 = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n    vm.login = function (username, password) {\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.checkLogin = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/checklogin'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function () {\n    var total = [],\n        displayTotal = function displayTotal(t) {\n        total.push(t);\n    },\n        getTotal = function getTotal() {\n        while (total.length > 1) {\n            total.shift();\n        }\n        return total[0];\n    };\n    return {\n        displayTotal: displayTotal,\n        getTotal: getTotal\n    };\n});","angular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax'])\r\n    .config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\r\n        stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productsdetails/:id',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                template: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.product3 = [];\r\n        vm.product4 = [];\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n        mainService.getProductById2(16).then(response1 => { //get an array of the 3 specific products on the home page to display\r\n            mainService.getProductById2(5).then(response2 => {\r\n                mainService.getProductById2(29).then(response3 => {\r\n                    mainService.getProductById2(2).then(response4 => {\r\n                        mainService.getProductById2(26).then(response5 => {\r\n                            mainService.getProductById2(23).then(response6 => {\r\n\r\n                                vm.product16 = response1.data[0];\r\n                                vm.product3.push(vm.product16);\r\n                                vm.product5 = response2.data[0];\r\n                                vm.product3.push(vm.product5);\r\n                                vm.product29 = response3.data[0];\r\n                                vm.product3.push(vm.product29);\r\n                                vm.product2 = response4.data[0];\r\n                                vm.product4.push(vm.product2);\r\n                                vm.product26 = response5.data[0];\r\n                                vm.product4.push(vm.product26);\r\n                                vm.product23 = response6.data[0];\r\n                                vm.product4.push(vm.product23);\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n\r\n        vm.login = () => {\r\n            mainService.login(vm.username, vm.password).then(response => {  //login user\r\n                console.log(response);\r\n                mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                })\r\n                mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                    vm.name = response.data.firstname;\r\n                    vm.check();\r\n                })\r\n            })\r\n        }\r\n        vm.$onInit = () => {\r\n            vm.check = () => {\r\n                vm.main.checkLogin()\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n        let vm = this;\r\n        vm.checkLogin = () => {\r\n            mainService.checkLogin().then(response => {\r\n                if (response.data.user) {\r\n                    vm.user = true;\r\n                }\r\n            })\r\n        }\r\n        vm.checkLogin();\r\n\r\n        vm.logged = () => {\r\n            if (vm.user) {\r\n                return true;\r\n            }\r\n        }\r\n        vm.logout = () => {\r\n            mainService.logout().then(response => {\r\n                vm.data = response.data;\r\n                vm.user = false;\r\n                $state.go('home');\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n    require: {\r\n        parent: '^mainComp'\r\n    },\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function (stripe, $http, mainService, modelFactory, $state, $timeout) {\r\n        let vm = this;\r\n        vm.payment = {};\r\n        vm.amount = modelFactory.getTotal();\r\n        vm.showP = true;\r\n        vm.show = () => {\r\n            vm.showP = false;\r\n        }\r\n        vm.charge = () => {\r\n\r\n\r\n            return stripe.card.createToken(vm.payment.card).then(response => {\r\n                console.log('token created for card ending in ', response.card.last4);\r\n                let payment = angular.copy(vm.payment);\r\n                payment.card = void 0;\r\n                payment.token = response.id;\r\n                payment.amount = Number(vm.amount * 100);\r\n                return $http.post('http://localhost:3065/api/payments', payment);  //post payment to server\r\n            }).then(function (payment) {\r\n                console.log('successfully submitted payment for $', payment.amount);\r\n            })\r\n                .catch(function (err) {\r\n                    if (err.type && /^Stripe/.test(err.type)) {\r\n                        console.log('Stripe error: ', err.message);\r\n                    }\r\n                    else {\r\n                        console.log('Other error occurred, possibly with your API', err.message);\r\n                    }\r\n                });\r\n        };\r\n        vm.goHome = () => {\r\n            $timeout(() => {\r\n                $timeout(() => {\r\n                    $timeout(() => {\r\n                        $timeout(() => {\r\n                            $timeout(() => {\r\n                                $timeout(() => {\r\n                                    $timeout(() => {\r\n                                        $timeout(() => {\r\n                                            $timeout(() => {\r\n                                                $timeout(() => {\r\n                                                    $state.go('home');\r\n                                                }, 1000)\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n\r\n        }\r\n    }\r\n})\r\n\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n                vm.product1 = $stateParams.id;\r\n            })\r\n        }\r\n         vm.getProducts();\r\n\r\n        mainService.getProductById().then(response => {\r\n            vm.product = response.data[0];\r\n        })\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.getProductsByType = () => {\r\n            mainService.getProductsByType($stateParams.type).then(response => {\r\n                vm.products = response.data;\r\n\r\n            })\r\n        };\r\n        vm.getProductsByType();\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n\r\n    controller: function (mainService, modelFactory) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        vm.showBox2 = true;\r\n        vm.show2 = false;\r\n        vm.$onInit = () => {\r\n            vm.show = vm.main.logged();\r\n            if (vm.show) {\r\n                vm.showBox = true;\r\n                vm.show2 = true;\r\n            } else {\r\n                vm.showBox = false;\r\n            }\r\n        }\r\n        vm.displayTotal = () => {\r\n            modelFactory.displayTotal(vm.gTotal);\r\n        }\r\n\r\n        vm.message1 = 'You have no items in your cart';\r\n        vm.message2 = 'Please log in to add items to your cart'\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;  //show cart if not empty\r\n                    vm.show2 = false;\r\n                    vm.products = response.data.map(v => { //add total property on each object in products array\r\n                        v.total = v.price * v.quantity     // to get correct quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                    vm.displayTotal();\r\n                }\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else if (response.data.length === 0) {\r\n                            vm.showCart = false\r\n                            vm.show2 = true;\r\n                        }\r\n                        else {\r\n                            vm.showCart = false\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    // bindings: {\r\n    //     view: '<'\r\n    // },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    $timeout(function () {\r\n                        vm.count = 1;\r\n                    },1000)\r\n                    vm.count = 2;\r\n                },2000)\r\n                $state.go('home');\r\n            },3000)\r\n\r\n\r\n\r\n    }\r\n})\r\n","angular.module('ecom').controller('loginCtrl', function (mainService) {\r\n    // let vm = this;\r\n    // vm.loggedIn = false;\r\n    // vm.login = () => {\r\n    //     mainService.login(vm.username, vm.password).then(response => {\r\n    //         vm.loggedIn = true;\r\n    //     })\r\n    // }\r\n    // vm.text = 'Login';\r\n    // if (vm.isLoggedIn) {\r\n    //     vm.text = 'Welcome';\r\n    // }\r\n});\r\n","angular.module('ecom').controller('mainCtrl', function ($scope, $http) {\r\n\r\n\r\n})\r\n","angular.module('ecom').directive('backGround', function ($timeout, $interval) {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, elem, attr) => {\r\n            elem.css({'background-image': 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb'});\r\n            let backgrounds = [\r\n                'https://s-media-cache-ak0.pinimg.com/originals/a9/e7/47/a9e7475a3a0f0af6d06685e8ec544fd3.jpg',\r\n                'http://carriagehousemusic.com/wp-content/uploads/2013/08/ssl-long-live-rm-BW-e1400469994189.jpg',\r\n                'http://aespeakers.com/wp-content/uploads/2015/11/Phat-Planet-Recording-Studios-3.jpg',\r\n                'http://www.mansionaudio.com/wp-content/uploads/2009/10/DSCN1270.JPG',\r\n                'https://www.gearslutz.com/board/attachments/photo-diaries-recording-studio-construction-projects/177790d1276237018-ssl-xl-9000k-install-img_1004a.jpg',\r\n                'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb'];\r\n            let i = -1;\r\n            // let x = ['300%', '100%'];\r\n            $interval(() => {\r\n                console.log(i)\r\n                i++;\r\n                if (i === backgrounds.length - 1) {\r\n                    i = 0;\r\n                }\r\n                let bg_string = \"url(\" + backgrounds[i] + \")\";\r\n                elem.css({\r\n                    'background-image': bg_string,\r\n                    'background-size': 'cover',\r\n                    'background-position': 'center',\r\n                    'background-attachment': 'fixed',\r\n                    'background-repeat': 'no-repeat',\r\n                    'height': '100vw',\r\n                    'width': '100vw',\r\n                    'transition': '3s',\r\n                    '-webkit-backface-visibility': 'hidden'\r\n                });\r\n\r\n\r\n            }, 5500)\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\n//         // let base = 'https://images.pexels.com/photos/164938/pexels-photo-164938.jpeg?w=1260&h=750&auto=compress&cs=tinysrgb',\r\n//             secs = 4;\r\n//         backgrounds.forEach(function(img){\r\n//             new Image().src = base + img;\r\n//             // caches images, avoiding white flash between background replacements\r\n//         });\r\n//\r\n//         function backgroundSequence() {\r\n//             window.clearTimeout();\r\n//             var k = 0;\r\n//             for (let i = 0; i < backgrounds.length; i++) {\r\n//                 setTimeout(function(){\r\n//                     console.log('working');\r\n//                     attr.style.background = \"url(\" + base + backgrounds[k] + \") no-repeat center center fixed\";\r\n//                     attr.style.backgroundSize =\"cover\";\r\n//                     if ((k + 1) === backgrounds.length) { setTimeout(function() { backgroundSequence() }, (secs * 1000))} else { k++; }\r\n//                 }, (secs * 1000) * i)\r\n//             }\r\n//         }\r\n//         backgroundSequence();\r\n//\r\n//\r\n//\r\n//\r\n//     //         current = 0;\r\n//     //     let nextBackground = () => {\r\n//     //         elem.css('background',\r\n//     //             backgrounds[current = ++current % backgrounds.length]\r\n//     //         );\r\n//     //         setTimeout(nextBackground, 1000);\r\n//     //     }\r\n//     //     setTimeout(nextBackground, 1000);\r\n//     //     elem.css('background', backgrounds[0]);\r\n//      }\r\n\r\n\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('countDown2', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 10;\r\n            $timeout(() => {\r\n                scope.number = 9;\r\n                $timeout(() => {\r\n                    scope.number = 8;\r\n                    $timeout(() => {\r\n                        scope.number = 7;\r\n                        $timeout(() => {\r\n                            scope.number = 6;\r\n                            $timeout(() => {\r\n                                scope.number = 5;\r\n                                $timeout(() => {\r\n                                    scope.number = 4;\r\n                                    $timeout(() => {\r\n                                        scope.number = 3;\r\n                                        $timeout(() => {\r\n                                            scope.number = 2;\r\n                                            $timeout(() => {\r\n                                                scope.number = 1;\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n","angular.module('ecom').directive('fade', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.mouseleave(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\r\n                    'opacity':'0'\r\n\r\n                });\r\n            })\r\n            elem.mouseenter(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\r\n                    'opacity': '1'\r\n                })\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    let serverUrl = 'http://localhost:3065',\r\n        vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products'\r\n        })\r\n    };\r\n    vm.getProductsByType = (type) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + type\r\n        })\r\n    }\r\n    vm.getProductById = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + $stateParams.id\r\n        })\r\n    }\r\n    vm.getProductById2 = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.login = (username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: serverUrl + '/api/login'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        })\r\n    }\r\n    vm.checkLogin = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/checklogin'\r\n        })\r\n    }\r\n})\r\n","angular.module('ecom').factory('modelFactory', () => {\r\n    let total = [],\r\n\r\n        displayTotal = t => {\r\n            total.push(t);\r\n        },\r\n\r\n        getTotal = () => {\r\n            while (total.length > 1) {\r\n                total.shift();\r\n            }\r\n            return total[0];\r\n        }\r\n    return {\r\n        displayTotal: displayTotal,\r\n        getTotal: getTotal\r\n    };\r\n});\r\n"]}