{"version":3,"sources":["bundle.js","app.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","components/timeOut.js","directives/angular-parallax.js","directives/backGround.js","directives/buttonD.js","directives/countDown.js","directives/countDown2.js","directives/fade.js","directives/navBar.js","directives/shipping.js","services/mainService.js","services/modelFactory.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","stripeProvider","setPublishableKey","state","url","template","component","templateUrl","otherwise","controller","mainService","vm","product3","subscribe","alert","name","getCustomerInfo","then","customer","response","data","getProductById2","product16","response1","push","product5","response2","product29","response3","addToCart","productId","id","require","main","$timeout","$state","login","username","password","deleteAllFromCart","firstname","check","$onInit","checkLogin","show","goHome","number","go","controllerAs","$http","user","logged","logout","parent","stripe","modelFactory","payment","amount","getTotal","showP","charge","card","createToken","console","log","last4","copy","token","Number","post","catch","err","type","test","message","$stateParams","getProducts","products","product1","getProductById","product","getProductsByType","showCart","showBox2","show2","showBox","message1","message2","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","updateQuantity","cart","cart1","pId","displayTotal","deleteFromCart","addNewUser","signUp","lastname","email","count","directive","$window","restrict","scope","parallaxRatio","parallaxVerticalOffset","parallaxHorizontalOffset","link","$scope","elem","attrs","setPosition","calcValY","pageYOffset","innerHeight","topVal","hozVal","indexOf","css","element","bind","transclude","prop","e","$apply","$interval","attr","base","backgrounds","preLoad","forEach","Image","src","img","bg_string","on","html","mouseleave","mouseenter","service","serverUrl","method","customerId","factory","t","shift"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax']).config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\n    stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productsdetails/:id',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        template: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.product3 = [];\n\n        vm.subscribe = function () {\n            //user subscribes to newsletter\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n        mainService.getProductById2(16).then(function (response1) {\n            //get an array of the 3 specific products on the home page to display\n            mainService.getProductById2(5).then(function (response2) {\n                mainService.getProductById2(29).then(function (response3) {\n\n                    vm.product16 = response1.data[0];\n                    vm.product3.push(vm.product16);\n                    vm.product5 = response2.data[0];\n                    vm.product3.push(vm.product5);\n                    vm.product29 = response3.data[0];\n                    vm.product3.push(vm.product29);\n                });\n            });\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n    require: {\n        main: '^mainComp'\n    },\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n\n        vm.login = function () {\n            mainService.login(vm.username, vm.password).then(function (response) {\n                //login user\n                mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n                });\n                mainService.getCustomerInfo().then(function (response) {\n                    //get customers first name\n                    vm.name = response.data.firstname;\n                    vm.check();\n                });\n            });\n        };\n        vm.$onInit = function () {\n            vm.check = function () {\n                vm.main.checkLogin();\n            };\n        };\n        vm.show = true; //show cart initially\n        vm.goHome = function () {\n            vm.show = false; //show redirect countdown\n            vm.number = 3;\n            $timeout(function () {\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //go to home state\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n    templateUrl: './views/mainComp.html',\n    controllerAs: 'main',\n    controller: function controller($http, mainService, $state) {\n        var vm = this;\n        vm.checkLogin = function () {\n            mainService.checkLogin().then(function (response) {\n                if (response.data.user) {\n                    vm.user = true;\n                }\n            });\n        };\n        vm.checkLogin();\n        vm.logged = function () {\n            if (vm.user) {\n                return true;\n            }\n        };\n        vm.logout = function () {\n            mainService.logout().then(function (response) {\n                vm.data = response.data;\n                vm.user = false;\n                $state.go('home');\n            });\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n    require: {\n        parent: '^mainComp'\n    },\n    templateUrl: './views/payment.html',\n\n    controller: function controller(stripe, $http, mainService, modelFactory, $state, $timeout) {\n        var vm = this;\n        vm.payment = {};\n        vm.amount = modelFactory.getTotal();\n        vm.showP = true;\n        vm.show = function () {\n            vm.showP = false;\n        };\n        vm.charge = function () {\n            mainService.deleteAllFromCart().then(function (response) {//delete all products from previous cart\n            });\n\n            return stripe.card.createToken(vm.payment.card).then(function (response) {\n                console.log('token created for card ending in ', response.card.last4);\n                var payment = angular.copy(vm.payment);\n                payment.card = void 0;\n                payment.token = response.id;\n                payment.amount = Number(vm.amount * 100);\n                return $http.post('http://localhost:3085/api/payments', payment); //post payment to server\n            }).then(function (payment) {\n                console.log('successfully submitted payment for $', payment.amount);\n            }).catch(function (err) {\n                if (err.type && /^Stripe/.test(err.type)) {\n                    console.log('Stripe error: ', err.message);\n                } else {\n                    console.log('Other error occurred, possibly with your API', err.message);\n                }\n            });\n        };\n\n        vm.goHome = function () {\n            $timeout(function () {\n                $timeout(function () {\n                    $timeout(function () {\n                        $timeout(function () {\n                            $timeout(function () {\n                                $timeout(function () {\n                                    $timeout(function () {\n                                        $timeout(function () {\n                                            $timeout(function () {\n                                                $timeout(function () {\n                                                    $state.go('home');\n                                                }, 1000);\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                //gets list of products to display\n                vm.products = response.data;\n                vm.product1 = $stateParams.id;\n            });\n        };\n        vm.getProducts();\n\n        mainService.getProductById().then(function (response) {\n            vm.product = response.data[0];\n        });\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService, $stateParams) {\n        var vm = this;\n\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data; //gets customer info to obtain customer id\n        });\n\n        vm.getProductsByType = function () {\n            mainService.getProductsByType($stateParams.type).then(function (response) {\n                vm.products = response.data;\n            });\n        };\n        vm.getProductsByType();\n\n        vm.addToCart = function (productId) {\n            //adds product to cart dependent on customer id\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n    require: {\n        main: '^mainComp'\n    },\n\n    controller: function controller(mainService, modelFactory) {\n        var vm = this;\n        vm.showCart = false; //cart is not initially shown if empty\n        vm.showBox2 = true;\n        vm.show2 = false;\n        vm.$onInit = function () {\n            vm.show = vm.main.logged();\n            if (vm.show) {\n                vm.showBox = true;\n                vm.show2 = true;\n            } else {\n                vm.showBox = false;\n            }\n        };\n\n        vm.message1 = 'You have no items in your cart';\n        vm.message2 = 'Please log in to add items to your cart';\n        mainService.getCustomerInfo().then(function (response) {\n            //gets customer info to obtain id\n            vm.customer = response.data;\n\n            mainService.getCart(vm.customer.id).then(function (response) {\n                //gets specific cart pertaining to id\n                if (response.data.length > 0) {\n                    vm.showCart = true; //show cart if not empty\n                    vm.show2 = false;\n                    vm.products = response.data.map(function (v) {\n                        //add total property on each object in products array\n                        v.total = v.price * v.quantity; // to get correct quantity\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\n                }\n            });\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n\n                    mainService.getCart(vm.customer.id).then(function (response) {\n\n                        vm.cart = response.data;\n                        vm.cart1 = vm.cart[0].cartid;\n                        console.log(vm.cart[0]);\n                        if (vm.cart.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                            vm.pId = false;\n                            if (vm.quantityTotal === 0) {\n                                vm.pId = true;\n                                if (vm.cart.length === 0) {\n                                    vm.showCart = false;\n                                    vm.show2 === true;\n                                }\n                            }\n                        }\n                    });\n                });\n            };\n            vm.displayTotal = function () {\n                modelFactory.displayTotal(vm.gTotal);\n            };\n            vm.deleteFromCart = function (cartid) {\n                console.log('working');\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    //deletes one item from cart\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        //goes back to server to get cart again pertaining to customer id\n                        if (response.data.length > 0) {\n                            vm.showCart = true; //if cart isn't empty, show it and display the products in it\n                            vm.products = response.data;\n                        } else if (response.data.length === 0) {\n                            vm.showCart = false;\n                            vm.show2 = true;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    controller: function controller(mainService, $timeout, $state) {\n        var vm = this;\n        vm.addNewUser = function () {\n            //post request to add new user to users table\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n        vm.show = true; //form is initially visible\n        vm.goHome = function () {\n            vm.show = false; //when sign up button is clicked, form disappears\n            vm.number = 3;\n            $timeout(function () {\n                //redirect counts down\n                vm.number = 2;\n                $timeout(function () {\n                    vm.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 2000);\n                $state.go('home'); //goes to home state in 3 seconds\n            }, 3000);\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('timeOut', {\n    templateUrl: './views/user.html',\n    controller: function controller($timeout, $state) {\n        var vm = this;\n        vm.count = 3;\n        $timeout(function () {\n            $timeout(function () {\n                $timeout(function () {\n                    vm.count = 1;\n                }, 1000);\n                vm.count = 2;\n            }, 2000);\n            $state.go('home');\n        }, 3000);\n    }\n});\n'use strict';\n\nangular.module('angular-parallax', []).directive('parallax', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@',\n      parallaxHorizontalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        if (!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1);\n        if (calcValY <= $window.innerHeight) {\n          var topVal = calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY;\n          var hozVal = $scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset;\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\n        }\n      };\n\n      setPosition();\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]).directive('parallaxBackground', ['$window', function ($window) {\n  return {\n    restrict: 'A',\n    transclude: true,\n    template: '<div ng-transclude></div>',\n    scope: {\n      parallaxRatio: '@',\n      parallaxVerticalOffset: '@'\n    },\n    link: function link($scope, elem, attrs) {\n      var setPosition = function setPosition() {\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\n        // horizontal positioning\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\n      };\n\n      // set our initial position - fixes webkit background render bug\n      angular.element($window).bind('load', function (e) {\n        setPosition();\n        $scope.$apply();\n      });\n\n      angular.element($window).bind(\"scroll\", setPosition);\n      angular.element($window).bind(\"touchmove\", setPosition);\n    } // link function\n  };\n}]);\n'use strict';\n\nangular.module('ecom').directive('backGround', function ($timeout, $interval) {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            var base = './js2/images/image1.jpeg',\n                backgrounds = ['./js2/images/image2.jpg', './js2/images/image3.jpg', './js2/images/image4.jpg', './js2/images/image5.JPG', './js2/images/image6.jpg', './js2/images/image7.jpg', './js2/images/image8.jpg', './js2/images/image9.jpg', './js2/images/image10.jpg', base];\n            var preLoad = function preLoad() {\n                backgrounds.forEach(function (img) {\n                    new Image().src = img;\n                });\n            };\n            preLoad();\n            var i = -1;\n\n            $interval(function () {\n                i++;\n                if (i === backgrounds.length) {\n                    i = 0;\n                }\n                var bg_string = \"url(\" + backgrounds[i] + \")\";\n\n                elem.css({\n                    'background-image': bg_string,\n                    'z-index': '-1'\n                });\n            }, 7500);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 3;\n            $timeout(function () {\n                scope.number = 2;\n                $timeout(function () {\n                    scope.number = 1;\n                    $timeout(function () {}, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('countDown2', function ($timeout) {\n    return {\n        restrict: \"A\",\n        template: '<div>{{number}}</div>',\n        link: function link(scope, element, attrs) {\n            scope.number = 10;\n            $timeout(function () {\n                scope.number = 9;\n                $timeout(function () {\n                    scope.number = 8;\n                    $timeout(function () {\n                        scope.number = 7;\n                        $timeout(function () {\n                            scope.number = 6;\n                            $timeout(function () {\n                                scope.number = 5;\n                                $timeout(function () {\n                                    scope.number = 4;\n                                    $timeout(function () {\n                                        scope.number = 3;\n                                        $timeout(function () {\n                                            scope.number = 2;\n                                            $timeout(function () {\n                                                scope.number = 1;\n                                            }, 1000);\n                                        }, 1000);\n                                    }, 1000);\n                                }, 1000);\n                            }, 1000);\n                        }, 1000);\n                    }, 1000);\n                }, 1000);\n            }, 1000);\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('fade', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.mouseleave(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\n                    'opacity': '0'\n                });\n            });\n            elem.mouseenter(function () {\n                elem.css({\n                    'transition': '.750s',\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\n                    'opacity': '1'\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('navBar', function () {\n      return {\n            restrict: 'E',\n            template: '<div id=\"navbarNav1\">\\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"products({type:\\'allproducts\\'})\">&nbsp;All\\n                                                                                                 Products</a>\\n                              </li>\\n                              <li class=\"nav-item\">\\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\\n                              </li>\\n                        </ul>\\n                        <form class=\"form-inline waves-effect waves-light\">\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\\n                        </form>\\n                  </div>'\n      };\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3085',\n        vm = this;\n\n    vm.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    vm.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products'\n        });\n    };\n    vm.getProductsByType = function (type) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + type\n        });\n    };\n    vm.getProductById = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + $stateParams.id\n        });\n    };\n    vm.getProductById2 = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/product/' + id\n        });\n    };\n\n    vm.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n\n    vm.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n\n    vm.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n\n    vm.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n\n    vm.deleteAllFromCart = function () {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/deleteall'\n        });\n    };\n\n    vm.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n    vm.login = function (username, password) {\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.checkLogin = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/checklogin'\n        });\n    };\n});\n'use strict';\n\nangular.module('ecom').factory('modelFactory', function () {\n    var total = [],\n        displayTotal = function displayTotal(t) {\n        total.push(t);\n    },\n        getTotal = function getTotal() {\n        while (total.length > 1) {\n            total.shift();\n        }\n        return total[0];\n    };\n    return {\n        displayTotal: displayTotal,\n        getTotal: getTotal\n    };\n});","angular.module('ecom', ['ui.router', 'angular-stripe', 'angular-parallax'])\r\n    .config(function ($urlRouterProvider, $stateProvider, stripeProvider) {\r\n        stripeProvider.setPublishableKey('pk_test_YCIPURTU6ePqrjERaHH1AHMN');\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productsdetails/:id',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                template: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.product3 = [];\r\n\r\n        vm.subscribe = () => { //user subscribes to newsletter\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n        mainService.getProductById2(16).then(response1 => { //get an array of the 3 specific products on the home page to display\r\n            mainService.getProductById2(5).then(response2 => {\r\n                mainService.getProductById2(29).then(response3 => {\r\n\r\n                    vm.product16 = response1.data[0];\r\n                    vm.product3.push(vm.product16);\r\n                    vm.product5 = response2.data[0];\r\n                    vm.product3.push(vm.product5);\r\n                    vm.product29 = response3.data[0];\r\n                    vm.product3.push(vm.product29);\r\n                })\r\n            })\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n\r\n        vm.login = () => {\r\n            mainService.login(vm.username, vm.password).then(response => {  //login user\r\n                mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n                })\r\n                mainService.getCustomerInfo().then(response => {  //get customers first name\r\n                    vm.name = response.data.firstname;\r\n                    vm.check();\r\n                })\r\n            })\r\n        }\r\n        vm.$onInit = () => {\r\n            vm.check = () => {\r\n                vm.main.checkLogin()\r\n            }\r\n        }\r\n        vm.show = true;  //show cart initially\r\n        vm.goHome = () => {\r\n            vm.show = false;  //show redirect countdown\r\n            vm.number = 3;\r\n            $timeout(() => {\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home');  //go to home state\r\n            }, 3000)\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    templateUrl: './views/mainComp.html',\r\n    controllerAs: 'main',\r\n    controller: function ($http, mainService, $state) {\r\n        let vm = this;\r\n        vm.checkLogin = () => {\r\n            mainService.checkLogin().then(response => {\r\n                if (response.data.user) {\r\n                    vm.user = true;\r\n                }\r\n            })\r\n        }\r\n        vm.checkLogin();\r\n        vm.logged = () => {\r\n            if (vm.user) {\r\n                return true;\r\n            }\r\n        }\r\n        vm.logout = () => {\r\n            mainService.logout().then(response => {\r\n                vm.data = response.data;\r\n                vm.user = false;\r\n                $state.go('home');\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n    require: {\r\n        parent: '^mainComp'\r\n    },\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function (stripe, $http, mainService, modelFactory, $state, $timeout) {\r\n        let vm = this;\r\n        vm.payment = {};\r\n        vm.amount = modelFactory.getTotal();\r\n        vm.showP = true;\r\n        vm.show = () => {\r\n            vm.showP = false;\r\n        }\r\n        vm.charge = () => {\r\n            mainService.deleteAllFromCart().then(response => {  //delete all products from previous cart\r\n            })\r\n\r\n            return stripe.card.createToken(vm.payment.card).then(response => {\r\n                console.log('token created for card ending in ', response.card.last4);\r\n                let payment = angular.copy(vm.payment);\r\n                payment.card = void 0;\r\n                payment.token = response.id;\r\n                payment.amount = Number(vm.amount * 100);\r\n                return $http.post('http://localhost:3085/api/payments', payment);  //post payment to server\r\n            }).then(function (payment) {\r\n                console.log('successfully submitted payment for $', payment.amount);\r\n            })\r\n                .catch(function (err) {\r\n                    if (err.type && /^Stripe/.test(err.type)) {\r\n                        console.log('Stripe error: ', err.message);\r\n                    }\r\n                    else {\r\n                        console.log('Other error occurred, possibly with your API', err.message);\r\n                    }\r\n                });\r\n        };\r\n\r\n        vm.goHome = () => {\r\n            $timeout(() => {\r\n                $timeout(() => {\r\n                    $timeout(() => {\r\n                        $timeout(() => {\r\n                            $timeout(() => {\r\n                                $timeout(() => {\r\n                                    $timeout(() => {\r\n                                        $timeout(() => {\r\n                                            $timeout(() => {\r\n                                                $timeout(() => {\r\n                                                    $state.go('home');\r\n                                                }, 1000)\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n})\r\n\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => { //gets list of products to display\r\n                vm.products = response.data;\r\n                vm.product1 = $stateParams.id;\r\n            })\r\n        }\r\n         vm.getProducts();\r\n\r\n        mainService.getProductById().then(response => {\r\n            vm.product = response.data[0];\r\n        })\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.addToCart = (productId) => {  //adds product to cart dependent on customer id\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService, $stateParams) {\r\n        let vm = this;\r\n\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;  //gets customer info to obtain customer id\r\n        })\r\n\r\n        vm.getProductsByType = () => {\r\n            mainService.getProductsByType($stateParams.type).then(response => {\r\n                vm.products = response.data;\r\n\r\n            })\r\n        };\r\n        vm.getProductsByType();\r\n\r\n        vm.addToCart = productId => {  //adds product to cart dependent on customer id\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n    require: {\r\n        main: '^mainComp'\r\n    },\r\n\r\n    controller: function (mainService, modelFactory) {\r\n        let vm = this;\r\n        vm.showCart = false;  //cart is not initially shown if empty\r\n        vm.showBox2 = true;\r\n        vm.show2 = false;\r\n        vm.$onInit = () => {\r\n            vm.show = vm.main.logged();\r\n            if (vm.show) {\r\n                vm.showBox = true;\r\n                vm.show2 = true;\r\n            } else {\r\n                vm.showBox = false;\r\n            }\r\n        }\r\n\r\n        vm.message1 = 'You have no items in your cart';\r\n        vm.message2 = 'Please log in to add items to your cart'\r\n        mainService.getCustomerInfo().then(response => {  //gets customer info to obtain id\r\n            vm.customer = response.data;\r\n\r\n            mainService.getCart(vm.customer.id).then(response => { //gets specific cart pertaining to id\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;  //show cart if not empty\r\n                    vm.show2 = false;\r\n                    vm.products = response.data.map(v => { //add total property on each object in products array\r\n                        v.total = v.price * v.quantity     // to get correct quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total; //iterate over products array, to get sum of totals\r\n                        vm.quantityTotal += vm.products[i].quantity; // to get sum of quantities\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99; //bind to view quantity total for shipping\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal; //bind to view total for grand total to pay\r\n                }\r\n            })\r\n            //same as above however updates subtotal, shipping, and grand total when the update button is clicked\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n\r\n                        vm.cart = response.data;\r\n                        vm.cart1 = vm.cart[0].cartid;\r\n                        console.log(vm.cart[0]);\r\n                        if (vm.cart.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                            vm.pId = false;\r\n                            if (vm.quantityTotal === 0) {\r\n                                vm.pId = true;\r\n                                if(vm.cart.length === 0){\r\n                                    vm.showCart = false;\r\n                                    vm.show2 === true;\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.displayTotal = () => {\r\n                modelFactory.displayTotal(vm.gTotal);\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                console.log('working');\r\n                mainService.deleteFromCart(cartid).then(response => {  //deletes one item from cart\r\n                    mainService.getCart(vm.customer.id).then(response => { //goes back to server to get cart again pertaining to customer id\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;  //if cart isn't empty, show it and display the products in it\r\n                            vm.products = response.data;\r\n                        } else if (response.data.length === 0) {\r\n                            vm.showCart = false\r\n                            vm.show2 = true;\r\n                        }\r\n                        else {\r\n                            vm.showCart = false\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    controller: function (mainService, $timeout, $state) {\r\n        let vm = this;\r\n        vm.addNewUser = () => { //post request to add new user to users table\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n\r\n            })\r\n        }\r\n        vm.show = true;  //form is initially visible\r\n        vm.goHome = () => {\r\n            vm.show = false; //when sign up button is clicked, form disappears\r\n            vm.number = 3;\r\n            $timeout(() => {  //redirect counts down\r\n                vm.number = 2;\r\n                $timeout(() => {\r\n                    vm.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 2000)\r\n                $state.go('home'); //goes to home state in 3 seconds\r\n            }, 3000)\r\n\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('timeOut', {\r\n    templateUrl: './views/user.html',\r\n    controller: function ($timeout, $state) {\r\n        let vm = this;\r\n        vm.count = 3;\r\n        $timeout(function () {\r\n            $timeout(function () {\r\n                $timeout(function () {\r\n                    vm.count = 1;\r\n                }, 1000)\r\n                vm.count = 2;\r\n            }, 2000)\r\n            $state.go('home');\r\n        }, 3000)\r\n    }\r\n})\r\n","'use strict';\r\n\r\nangular.module('angular-parallax', [\r\n]).directive('parallax', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n      parallaxHorizontalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        if(!$scope.parallaxHorizontalOffset) $scope.parallaxHorizontalOffset = '0';\r\n        var calcValY = $window.pageYOffset * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1 );\r\n        if (calcValY <= $window.innerHeight) {\r\n          var topVal = (calcValY < $scope.parallaxVerticalOffset ? $scope.parallaxVerticalOffset : calcValY);\r\n          var hozVal = ($scope.parallaxHorizontalOffset.indexOf(\"%\") === -1 ? $scope.parallaxHorizontalOffset + 'px' : $scope.parallaxHorizontalOffset);\r\n          elem.css('transform', 'translate(' + hozVal + ', ' + topVal + 'px)');\r\n        }\r\n      };\r\n\r\n      setPosition();\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]).directive('parallaxBackground', ['$window', function($window) {\r\n  return {\r\n    restrict: 'A',\r\n    transclude: true,\r\n    template: '<div ng-transclude></div>',\r\n    scope: {\r\n      parallaxRatio: '@',\r\n      parallaxVerticalOffset: '@',\r\n    },\r\n    link: function($scope, elem, attrs) {\r\n      var setPosition = function () {\r\n        var calcValY = (elem.prop('offsetTop') - $window.pageYOffset) * ($scope.parallaxRatio ? $scope.parallaxRatio : 1.1) - ($scope.parallaxVerticalOffset || 0);\r\n        // horizontal positioning\r\n        elem.css('background-position', \"50% \" + calcValY + \"px\");\r\n      };\r\n\r\n      // set our initial position - fixes webkit background render bug\r\n      angular.element($window).bind('load', function(e) {\r\n        setPosition();\r\n        $scope.$apply();\r\n      });\r\n\r\n      angular.element($window).bind(\"scroll\", setPosition);\r\n      angular.element($window).bind(\"touchmove\", setPosition);\r\n    }  // link function\r\n  };\r\n}]);\r\n","angular.module('ecom').directive('backGround', function ($timeout, $interval) {\r\n    return {\r\n        restrict: 'A',\r\n        link: (scope, elem, attr) => {\r\n            let base = './js2/images/image1.jpeg',\r\n                backgrounds = [\r\n                './js2/images/image2.jpg',\r\n                './js2/images/image3.jpg',\r\n                './js2/images/image4.jpg',\r\n                './js2/images/image5.JPG',\r\n                './js2/images/image6.jpg',\r\n                './js2/images/image7.jpg',\r\n                './js2/images/image8.jpg',\r\n                './js2/images/image9.jpg',\r\n                './js2/images/image10.jpg',\r\n                base\r\n            ];\r\n            let preLoad = () => {\r\n                backgrounds.forEach(img => {\r\n                    new Image().src = img;\r\n                });\r\n            }\r\n            preLoad();\r\n            let i = -1;\r\n\r\n            $interval(() => {\r\n                i++;\r\n                if (i === backgrounds.length) {\r\n                    i = 0;\r\n                }\r\n                let bg_string = \"url(\" + backgrounds[i] + \")\";\r\n\r\n                elem.css({\r\n                    'background-image': bg_string,\r\n                    'z-index': '-1'\r\n                });\r\n            }, 7500)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('countDown', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 3;\r\n            $timeout(() => {\r\n                scope.number = 2;\r\n                $timeout(() => {\r\n                    scope.number = 1;\r\n                    $timeout(() => {\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","angular.module('ecom').directive('countDown2', function ($timeout) {\r\n    return {\r\n        restrict: \"A\",\r\n        template: '<div>{{number}}</div>',\r\n        link: (scope, element, attrs) => {\r\n            scope.number = 10;\r\n            $timeout(() => {\r\n                scope.number = 9;\r\n                $timeout(() => {\r\n                    scope.number = 8;\r\n                    $timeout(() => {\r\n                        scope.number = 7;\r\n                        $timeout(() => {\r\n                            scope.number = 6;\r\n                            $timeout(() => {\r\n                                scope.number = 5;\r\n                                $timeout(() => {\r\n                                    scope.number = 4;\r\n                                    $timeout(() => {\r\n                                        scope.number = 3;\r\n                                        $timeout(() => {\r\n                                            scope.number = 2;\r\n                                            $timeout(() => {\r\n                                                scope.number = 1;\r\n                                            }, 1000)\r\n                                        }, 1000)\r\n                                    }, 1000)\r\n                                }, 1000)\r\n                            }, 1000)\r\n                        }, 1000)\r\n                    }, 1000)\r\n                }, 1000)\r\n            }, 1000)\r\n        }\r\n    }\r\n});\r\n","angular.module('ecom').directive('fade', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.mouseleave(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 0 0 0 rgba(0,0,0,0)',\r\n                    'opacity':'0'\r\n                });\r\n            })\r\n            elem.mouseenter(() => {\r\n                elem.css({\r\n                    'transition': '.750s',\r\n                    'box-shadow': '0 2px 5px 0 rgba(0,0,0,.16)',\r\n                    'opacity': '1'\r\n                })\r\n            })\r\n        }\r\n    }\r\n});\r\n\r\n","angular.module('ecom').directive('navBar', function () {\r\n   return{\r\n       restrict: 'E',\r\n       template: `<div id=\"navbarNav1\">\r\n                        <ul class=\"navbar-nav mr-auto waves-effect waves-light\" style=\"width:auto\">\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"home\">Home</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"products({type:'allproducts'})\">&nbsp;All\r\n                                                                                                 Products</a>\r\n                              </li>\r\n                              <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\" ui-sref=\"shoppingCart\">&nbsp;Shopping Cart</a>\r\n                              </li>\r\n                        </ul>\r\n                        <form class=\"form-inline waves-effect waves-light\">\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"login\" ng-hide=\"main.user\">Login</a>\r\n                              <a class=\"animated fadeIn nav-link\" ui-sref=\"signup\" ng-hide=\"main.user\">Sign-Up</a>\r\n                              <a class=\"animated fadeIn nav-link\" ng-click=\"main.logout()\" ng-show=\"main.user\">Logout</a>\r\n                        </form>\r\n                  </div>`\r\n   }\r\n});\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    let serverUrl = 'http://localhost:3085',\r\n        vm = this;\r\n\r\n    vm.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    vm.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products'\r\n        })\r\n    };\r\n    vm.getProductsByType = (type) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + type\r\n        })\r\n    }\r\n    vm.getProductById = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + $stateParams.id\r\n        })\r\n    }\r\n    vm.getProductById2 = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/product/' + id\r\n        })\r\n    }\r\n\r\n    vm.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n\r\n    vm.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n\r\n    vm.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n\r\n    vm.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n\r\n    vm.deleteAllFromCart = () => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/deleteall'\r\n        })\r\n    }\r\n\r\n    vm.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    };\r\n    vm.login = (username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: serverUrl + '/api/login'\r\n        })\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        })\r\n    }\r\n    vm.checkLogin = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/checklogin'\r\n        })\r\n    };\r\n})\r\n","angular.module('ecom').factory('modelFactory', () => {\r\n    let total = [],\r\n\r\n        displayTotal = t => {\r\n            total.push(t);\r\n        },\r\n\r\n        getTotal = () => {\r\n            while (total.length > 1) {\r\n                total.shift();\r\n            }\r\n            return total[0];\r\n        }\r\n    return {\r\n        displayTotal: displayTotal,\r\n        getTotal: getTotal\r\n    };\r\n});\r\n"]}