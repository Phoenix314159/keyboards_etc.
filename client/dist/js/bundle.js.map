{"version":3,"sources":["bundle.js","app.js","components/home.js","components/login.js","components/mainComp.js","components/payment.js","components/productDetails.js","components/products.js","components/shoppingCart.js","components/signUp.js","controller/mainCtrl.js","directives/buttonD.js","directives/shipping.js","services/mainService.js"],"names":["angular","module","config","$urlRouterProvider","$stateProvider","state","url","template","component","templateUrl","otherwise","bindings","loggedIn","controller","mainService","vm","subscribe","alert","name","addToCart","productId","then","require","parent","$scope","$onInit","login","username","password","console","log","text","getProducts","products","response","data","getCustomerInfo","customer","id","showCart","getCart","length","map","v","total","price","quantity","cartTotal","quantityTotal","i","qTotal","gTotal","updateTotal","cartid","updateQuantity","deleteFromCart","view","addNewUser","signUp","firstname","lastname","email","directive","restrict","link","scope","elem","attr","on","html","service","$http","$stateParams","serverUrl","method","type","getProductById","customerId"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('ecom', ['ui.router']).config(function ($urlRouterProvider, $stateProvider) {\n    $stateProvider.state('home', {\n        url: '/',\n        template: '<home></home>',\n        component: 'home'\n    }).state('login', {\n        url: '/login',\n        template: '<login></login>',\n        component: 'login'\n    }).state('signup', {\n        url: '/signup',\n        template: '<sign-up></sign-up>',\n        component: 'signUp'\n    }).state('products', {\n        url: '/products/:type',\n        template: '<products></products>',\n        component: 'products'\n    }).state('shoppingCart', {\n        url: '/shopping-cart',\n        template: '<shopping-cart></shopping-cart>',\n        component: 'shoppingCart'\n    }).state('productDetails', {\n        url: '/productdetails',\n        template: '<product-details></product-details>',\n        component: 'productDetails'\n    }).state('user', {\n        url: '/products',\n        templateUrl: './views/user.html'\n    }).state('payment', {\n        url: '/payment',\n        templateUrl: '<payment></payment>',\n        component: 'payment'\n    });\n    $urlRouterProvider.otherwise('/');\n});\n'use strict';\n\nangular.module('ecom').component('home', {\n    templateUrl: './views/home.html',\n    bindings: {\n        loggedIn: '='\n    },\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.subscribe = function () {\n            alert('Thank you for subscribing ' + vm.name);\n        };\n        vm.addToCart = function (productId) {\n            mainService.addToCart(1, productId, 1).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('login', {\n    templateUrl: './views/login.html',\n\n    bindings: {\n        loggedIn: '<'\n\n    },\n    require: {\n        parent: '^mainComp'\n    },\n    controller: function controller(mainService, $scope) {\n        var vm = this;\n        vm.$onInit = function () {\n            vm.login = function () {\n                mainService.login(vm.username, vm.password).then(function (response) {\n                    vm.parent.loggedIn = true;\n                    console.log(vm.parent);\n                });\n            };\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').component('mainComp', {\n\ttemplate: '<header>\\n\\t\\t\\t\\t<nav class=\"navbar navbar-toggleable-md navbar-dark\">\\n\\t\\t\\t\\t\\t<div class=\"container\">\\n\\t\\t\\t\\t\\t\\t<button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\\n\\t\\t\\t\\t\\t\\t        data-target=\"#navbarNav1\" aria-controls=\"navbarNav1\" aria-expanded=\"false\"\\n\\t\\t\\t\\t\\t\\t        aria-label=\"Toggle navigation\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\"navbar-toggler-icon\"></span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t    <div class=\"collapse navbar-collapse\" id=\"navbarNav1\">\\n\\t\\t\\t\\t\\t\\t\\t<ul class=\"navbar-nav mr-auto\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"nav-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"nav-link\" ui-sref=\"products({type:\\'allproducts\\'})\">All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tProducts</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"nav-item\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"nav-link\" ui-sref=\"shoppingCart\">Shopping Cart</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t<form class=\"form-inline waves-effect waves-light\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"nav-link\" ui-sref=\"login\">{{$ctrl.text}}</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a class=\"nav-link\" ui-sref=\"signup\">Sign-Up</a>\\n\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</nav>\\n\\t\\t\\t\\t</header>\\n       <ui-view></ui-view>',\n\n\tcontroller: function controller() {\n\t\tvar vm = this;\n\t\tvm.text = 'Login';\n\t\tvm.$onInit = function () {\n\t\t\tif (vm.loggedIn) {\n\t\t\t\tvm.text = 'Welcome';\n\t\t\t\tconsole.log(vm.loggedIn);\n\t\t\t}\n\t\t};\n\t}\n});\n'use strict';\n\nangular.module('ecom').component('payment', {\n\n    templateUrl: './views/payment.html',\n\n    controller: function controller() {}\n});\n'use strict';\n\nangular.module('ecom').component('productDetails', {\n    templateUrl: './views/product-details.html'\n});\n'use strict';\n\nangular.module('ecom').component('products', {\n    templateUrl: './views/products.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.getProducts = function () {\n            mainService.getProducts().then(function (response) {\n                vm.products = response.data;\n                console.log(vm.products);\n            });\n        };\n        vm.getProducts();\n        mainService.getCustomerInfo().then(function (response) {\n            console.log(response.data);\n            vm.customer = response.data;\n        });\n\n        vm.addToCart = function (productId) {\n\n            mainService.addToCart(vm.customer.id, productId, 1).then(function (response) {});\n        };\n        // vm.$onInit = () => {\n        //     vm.dude = vm.parent.hiya();\n        //     vm.products = vm.parent.getProducts();\n        //    console.log(vm.parent.products);\n        //    vm.addToCart = (productId) => {\n        //        vm.parent.addToCart(productId);\n        //    }\n        // };\n\n    }\n});\n'use strict';\n\nangular.module('ecom').component('shoppingCart', {\n    templateUrl: './views/shopping-cart.html',\n\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.showCart = false;\n        mainService.getCustomerInfo().then(function (response) {\n            vm.customer = response.data;\n            mainService.getCart(vm.customer.id).then(function (response) {\n                if (response.data.length > 0) {\n                    vm.showCart = true;\n                    vm.products = response.data.map(function (v) {\n                        v.total = v.price * v.quantity;\n                        return v;\n                    });\n                    vm.cartTotal = 0;\n                    vm.quantityTotal = 0;\n                    for (var i = 0; i < vm.products.length; i++) {\n                        vm.cartTotal += vm.products[i].total;\n                        vm.quantityTotal += vm.products[i].quantity;\n                    }\n                    vm.qTotal = vm.quantityTotal * 1.99;\n                    vm.gTotal = vm.cartTotal + vm.qTotal;\n                }\n            });\n\n            vm.updateTotal = function (cartid, quantity) {\n                mainService.updateQuantity(cartid, quantity).then(function (response) {\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        if (response.data.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data.map(function (v) {\n                                v.total = v.price * v.quantity;\n                                return v;\n                            });\n                            vm.cartTotal = 0;\n                            vm.quantityTotal = 0;\n                            for (var i = 0; i < vm.products.length; i++) {\n                                vm.cartTotal += vm.products[i].total;\n                                vm.quantityTotal += vm.products[i].quantity;\n                            }\n                            vm.qTotal = vm.quantityTotal * 1.99;\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\n                        }\n                    });\n                });\n            };\n            vm.deleteFromCart = function (cartid) {\n                mainService.deleteFromCart(cartid).then(function (response) {\n                    mainService.getCart(vm.customer.id).then(function (response) {\n                        if (response.data.length > 0) {\n                            vm.showCart = true;\n                            vm.products = response.data;\n                        } else {\n                            vm.showCart = false;\n                        }\n                    });\n                });\n            };\n        });\n    }\n\n});\n'use strict';\n\nangular.module('ecom').component('signUp', {\n    templateUrl: './views/signUp.html',\n    bindings: {\n        view: '<'\n    },\n    controller: function controller(mainService) {\n        var vm = this;\n        vm.addNewUser = function () {\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(function (response) {});\n        };\n    }\n});\n'use strict';\n\nangular.module('ecom').controller('mainCtrl', function ($scope, mainService) {\n   $scope.text = 'Login';\n   if ($scope.loggedIn) {\n      $scope.text = 'Welcome';\n   }\n   console.log($scope.loggedIn);\n});\n'use strict';\n\nangular.module('ecom').directive('buttonD', function () {\n    return {\n        restrict: 'A',\n        link: function link(scope, elem, attr) {\n            elem.on('click', function () {\n                elem.html(\"ADDED TO CART\");\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('ecom').directive('shipping', function () {\n    return {\n        restrict: 'E',\n        template: '<div>Shipping is <br/> $1.99 per item</div>'\n    };\n});\n'use strict';\n\nangular.module('ecom').service('mainService', function ($http, $stateParams) {\n    var serverUrl = 'http://localhost:3055';\n    var vm = this;\n    this.getCustomerInfo = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/me'\n        });\n    };\n\n    this.getProducts = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + $stateParams.type\n        });\n    };\n    this.getProductById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/products/' + id\n        });\n    };\n    this.login = function (username, password) {\n\n        return $http({\n            method: 'POST',\n            data: { username: username, password: password },\n            url: serverUrl + '/api/login'\n        });\n    };\n    this.signUp = function (firstname, lastname, email, username, password) {\n        return $http({\n            method: 'POST',\n            data: { firstname: firstname, lastname: lastname, email: email, username: username, password: password },\n            url: serverUrl + '/api/newuser'\n        });\n    };\n    this.getCart = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/cart/' + id\n        });\n    };\n    this.addToCart = function (customerId, productId, quantity) {\n        return $http({\n            method: 'POST',\n            data: { customerId: customerId, productId: productId, quantity: quantity },\n            url: serverUrl + '/api/addtocart'\n        });\n    };\n    this.deleteFromCart = function (id) {\n        return $http({\n            method: 'DELETE',\n            url: serverUrl + '/api/delete/' + id\n        });\n    };\n    this.updateQuantity = function (id, quantity) {\n        return $http({\n            method: 'PUT',\n            data: { id: id, quantity: quantity },\n            url: serverUrl + '/api/updatequantity'\n        });\n    };\n});","angular.module('ecom', ['ui.router'])\r\n    .config(function ($urlRouterProvider, $stateProvider) {\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                template: '<home></home>',\r\n                component: 'home'\r\n            })\r\n            .state('login', {\r\n                url: '/login',\r\n                template: '<login></login>',\r\n                component: 'login'\r\n            })\r\n            .state('signup', {\r\n                url: '/signup',\r\n                template: '<sign-up></sign-up>',\r\n                component: 'signUp'\r\n            })\r\n            .state('products', {\r\n                url: '/products/:type',\r\n                template: '<products></products>',\r\n                component: 'products'\r\n            })\r\n            .state('shoppingCart', {\r\n                url: '/shopping-cart',\r\n                template: '<shopping-cart></shopping-cart>',\r\n                component: 'shoppingCart'\r\n            })\r\n            .state('productDetails', {\r\n                url: '/productdetails',\r\n                template: '<product-details></product-details>',\r\n                component: 'productDetails'\r\n            })\r\n            .state('user', {\r\n                url: '/products',\r\n                templateUrl: './views/user.html'\r\n            })\r\n            .state('payment', {\r\n                url: '/payment',\r\n                templateUrl: '<payment></payment>',\r\n                component: 'payment'\r\n            })\r\n        $urlRouterProvider.otherwise('/');\r\n    })\r\n\r\n","angular.module('ecom').component('home', {\r\n    templateUrl: './views/home.html',\r\n    bindings: {\r\n      loggedIn: '='\r\n    },\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.subscribe = () => {\r\n            alert(`Thank you for subscribing ${vm.name}`)\r\n        }\r\n        vm.addToCart = (productId) => {\r\n            mainService.addToCart(1, productId, 1).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('login', {\r\n    templateUrl: './views/login.html',\r\n\r\n    bindings: {\r\n        loggedIn: '<',\r\n\r\n    },\r\n    require: {\r\n        parent: '^mainComp'\r\n    },\r\n    controller: function (mainService, $scope) {\r\n        let vm = this;\r\n        vm.$onInit = () => {\r\n            vm.login = () => {\r\n                mainService.login(vm.username, vm.password).then(response => {\r\n                    vm.parent.loggedIn = true;\r\n                    console.log(vm.parent)\r\n                })\r\n            }\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('mainComp', {\r\n    template: `<header>\r\n\t\t\t\t<nav class=\"navbar navbar-toggleable-md navbar-dark\">\r\n\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t<button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n\t\t\t\t\t\t        data-target=\"#navbarNav1\" aria-controls=\"navbarNav1\" aria-expanded=\"false\"\r\n\t\t\t\t\t\t        aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t    <div class=\"collapse navbar-collapse\" id=\"navbarNav1\">\r\n\t\t\t\t\t\t\t<ul class=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" ui-sref=\"products({type:'allproducts'})\">All\r\n\t\t\t\t\t\t\t\t\t\tProducts</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" ui-sref=\"shoppingCart\">Shopping Cart</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<form class=\"form-inline waves-effect waves-light\">\r\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" ui-sref=\"login\">{{$ctrl.text}}</a>\r\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" ui-sref=\"signup\">Sign-Up</a>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t</header>\r\n       <ui-view></ui-view>`,\r\n\r\n    controller: function () {\r\n        let vm = this;\r\n        vm.text = 'Login';\r\n        vm.$onInit = () => {\r\n            if (vm.loggedIn) {\r\n                vm.text = 'Welcome';\r\n                console.log(vm.loggedIn)\r\n            }\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').component('payment', {\r\n\r\n    templateUrl: './views/payment.html',\r\n\r\n    controller: function () {\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('productDetails', {\r\n    templateUrl: './views/product-details.html'\r\n})\r\n","angular.module('ecom').component('products', {\r\n    templateUrl: './views/products.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.getProducts = () => {\r\n            mainService.getProducts().then(response => {\r\n                vm.products = response.data;\r\n                console.log(vm.products);\r\n            })\r\n        }\r\n        vm.getProducts();\r\n        mainService.getCustomerInfo().then(response => {\r\n            console.log(response.data)\r\n            vm.customer = response.data;\r\n        })\r\n\r\n        vm.addToCart = (productId) => {\r\n\r\n            mainService.addToCart(vm.customer.id, productId, 1).then(response => {\r\n            })\r\n        }\r\n        // vm.$onInit = () => {\r\n        //     vm.dude = vm.parent.hiya();\r\n        //     vm.products = vm.parent.getProducts();\r\n        //    console.log(vm.parent.products);\r\n        //    vm.addToCart = (productId) => {\r\n        //        vm.parent.addToCart(productId);\r\n        //    }\r\n        // };\r\n\r\n\r\n    }\r\n})\r\n","angular.module('ecom').component('shoppingCart', {\r\n    templateUrl: './views/shopping-cart.html',\r\n\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.showCart = false;\r\n        mainService.getCustomerInfo().then(response => {\r\n            vm.customer = response.data;\r\n            mainService.getCart(vm.customer.id).then(response => {\r\n                if (response.data.length > 0) {\r\n                    vm.showCart = true;\r\n                    vm.products = response.data.map(v => {\r\n                        v.total = v.price * v.quantity\r\n                        return v;\r\n                    });\r\n                    vm.cartTotal = 0;\r\n                    vm.quantityTotal = 0;\r\n                    for (let i = 0; i < vm.products.length; i++) {\r\n                        vm.cartTotal += vm.products[i].total;\r\n                        vm.quantityTotal += vm.products[i].quantity;\r\n                    }\r\n                    vm.qTotal = vm.quantityTotal * 1.99;\r\n                    vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                }\r\n\r\n            })\r\n\r\n\r\n            vm.updateTotal = (cartid, quantity) => {\r\n                mainService.updateQuantity(cartid, quantity).then(response => {\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data.map(v => {\r\n                                v.total = v.price * v.quantity\r\n                                return v;\r\n                            });\r\n                            vm.cartTotal = 0;\r\n                            vm.quantityTotal = 0;\r\n                            for (let i = 0; i < vm.products.length; i++) {\r\n                                vm.cartTotal += vm.products[i].total;\r\n                                vm.quantityTotal += vm.products[i].quantity;\r\n                            }\r\n                            vm.qTotal = vm.quantityTotal * 1.99;\r\n                            vm.gTotal = vm.cartTotal + vm.qTotal;\r\n                        }\r\n\r\n                    })\r\n                })\r\n            }\r\n            vm.deleteFromCart = (cartid) => {\r\n                mainService.deleteFromCart(cartid).then(response => {\r\n                    mainService.getCart(vm.customer.id).then(response => {\r\n                        if (response.data.length > 0) {\r\n                            vm.showCart = true;\r\n                            vm.products = response.data;\r\n                        } else {\r\n                            vm.showCart = false;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n});\r\n","angular.module('ecom').component('signUp', {\r\n    templateUrl: './views/signUp.html',\r\n    bindings: {\r\n        view: '<'\r\n    },\r\n    controller: function (mainService) {\r\n        let vm = this;\r\n        vm.addNewUser = () => {\r\n            mainService.signUp(vm.firstname, vm.lastname, vm.email, vm.username, vm.password).then(response => {\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').controller('mainCtrl', function ($scope, mainService) {\r\n   $scope.text = 'Login';\r\n   if($scope.loggedIn){\r\n       $scope.text = 'Welcome';\r\n   }\r\n   console.log($scope.loggedIn)\r\n})\r\n","angular.module('ecom').directive('buttonD', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, elem, attr) {\r\n            elem.on('click', function () {\r\n                elem.html(\"ADDED TO CART\");\r\n            })\r\n        }\r\n    }\r\n})\r\n","angular.module('ecom').directive('shipping', function () {\r\n   return {\r\n       restrict: 'E',\r\n       template: `<div>Shipping is <br/> $1.99 per item</div>`\r\n   }\r\n});\r\n","angular.module('ecom').service('mainService', function ($http, $stateParams) {\r\n    var serverUrl = 'http://localhost:3055';\r\n    let vm = this;\r\n    this.getCustomerInfo = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/me'\r\n        })\r\n    }\r\n\r\n    this.getProducts = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + $stateParams.type\r\n        })\r\n    };\r\n    this.getProductById = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/products/' + id\r\n        })\r\n    }\r\n    this.login = (username, password) => {\r\n\r\n        return $http({\r\n            method: 'POST',\r\n            data: {username, password},\r\n            url: serverUrl + '/api/login'\r\n        })\r\n    };\r\n    this.signUp = (firstname, lastname, email, username, password) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {firstname, lastname, email, username, password},\r\n            url: serverUrl + '/api/newuser'\r\n        })\r\n    };\r\n    this.getCart = (id) => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/cart/' + id\r\n        })\r\n    }\r\n    this.addToCart = (customerId, productId, quantity) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {customerId, productId, quantity},\r\n            url: serverUrl + '/api/addtocart'\r\n        })\r\n    };\r\n    this.deleteFromCart = id => {\r\n        return $http({\r\n            method: 'DELETE',\r\n            url: serverUrl + '/api/delete/' + id\r\n        })\r\n    };\r\n    this.updateQuantity = (id, quantity) => {\r\n        return $http({\r\n            method: 'PUT',\r\n            data: {id, quantity},\r\n            url: serverUrl + '/api/updatequantity'\r\n        })\r\n    }\r\n\r\n\r\n\r\n})\r\n"]}